{"meta":{"title":"Yangyi的博客","subtitle":"爱看书的杨杨","description":null,"author":"Frannie Yangyi","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"css选择器、权重及优先级","slug":"css选择器、权重及优先级","date":"2017-03-21T07:11:22.000Z","updated":"2017-03-21T07:16:22.781Z","comments":true,"path":"2017/03/21/css选择器、权重及优先级/","link":"","permalink":"http://yoursite.com/2017/03/21/css选择器、权重及优先级/","excerpt":"遇到的问题 子元素使用padding会影响父元素。（解决方法是给父元素用padding） 背景图片的设置。（已解决）","text":"遇到的问题 子元素使用padding会影响父元素。（解决方法是给父元素用padding） 背景图片的设置。（已解决） 分享会（胡小青）#CSS选择器、权重及优先级 ###选择器的种类 通配符选择器（＊） id选择器（#ID） 类选择器（.className） 标签选择器(E) 后代选择器（Ｅ Ｆ） 子元素选择器(E&gt;F) 相邻兄弟元素选择器(E + F) 群组选择器（selector1,selector2,…,selectorN） 交集选择器（E.className) 属性选择器 伪类选择器12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//html&lt;div id=&quot;share&quot;&gt;id选择器&lt;/div&gt;&lt;div class=&quot;share&quot;&gt;类选择器&lt;/div&gt;&lt;div&gt; &lt;em&gt;标签选择器&lt;/em&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;后代选择器&lt;/p&gt; &lt;p&gt;&lt;span&gt;非直系后代&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;子元素选择器&lt;/p&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;相邻兄弟1&lt;/p&gt; &lt;span&gt;相邻兄弟2&lt;/span&gt;&lt;/div&gt;&lt;div&gt; &lt;h1&gt;群组选择器&lt;/h1&gt; &lt;h2&gt;群组选择器&lt;/h2&gt; &lt;h3&gt;群组选择器&lt;/h3&gt;&lt;/div&gt;//css*&#123; margin: 0; padding: 0;&#125;#share&#123; width: 200px; background: #cfd2d1;&#125;.share&#123; width: 200px; background: #e9eeec; margin-bottom: 10px;&#125;div.share &#123; border: 2px solid #000;&#125;em&#123; background: #f5f6f6;&#125;div p &#123; background: #e9eeec;&#125;div p span&#123; width: 200px; background: #acb1af;&#125;div &gt; p &#123; width: 200px; background: #adcec0;&#125;p + span &#123; width: 200px; background: #9d9e9e;&#125;h1,h2,h3 &#123; width: 200px; background: #afead2;&#125; ####属性选择器| 属性选择器| 功能 | ||:—–:|:——:|:—–:||E[att]|匹配所有具有att属性的E元素，不考虑它的值。|css2||E[att=val]|匹配所有att属性等于”val”的E元素|css2||E[att~=val]|匹配属性包含val的元素，并设置其样式：注意是val，所以val-ab这样不算| css2 ||E[att|=val]|匹配所有att属性具有多个连字号分隔（hyphen-separated）的值、其中一个值以”val”开头的E元素，主要用于lang属性|css2|| E[att^=val] | 选择匹配的元素E，E定义了属性att,属性值以val开头的字符串 |css3||E[arr$=val]|选择匹配的元素E，E定义了属性att,属性值以val结尾的字符串|css3||E[att*=val]|选择匹配的元素E，E定义了属性att,属性值包含val的字符串，也就是val可以在任意位置|css3|123456789101112131415161718192021222324252627282930//html&lt;a href=&quot;xxx.pdf&quot;&gt;我链接的是PDF文件&lt;/a&gt;&lt;a href=&quot;#&quot; class=&quot;icon&quot;&gt;我类名是icon&lt;/a&gt;&lt;a href=&quot;#&quot; title=&quot;我的title是more&quot;&gt;我的title是more&lt;/a&gt;&lt;a href=&quot;#&quot; name=&quot;about&quot; lang=&quot;en-zhN&quot;&gt;选择含有about的元素&lt;/a&gt;&lt;a href=&quot;#&quot; name=&quot;about-ab&quot; lang=&quot;en&quot;&gt;选择含有about的元素&lt;/a&gt;&lt;a href=&quot;#&quot; name=&quot;about ab&quot;&gt;选择含有about的元素&lt;/a&gt;//cssa[href=&quot;xxx.pdf&quot;] &#123; border: 1px solid #000;&#125;a[href$=pdf]&#123; background: orange; color: #fff;&#125;a[class^=icon] &#123; background: #55e2a8; color:#fff;&#125;a[title*=more] &#123; background: #7a92e9; color: #fff;&#125;a[name~=about] &#123; background: #55e2a8;&#125;a[lang|=en] &#123; border: 1px solid #000;&#125; ###伪类选择器 * ####动态伪类 锚点伪类 :link 链接访问前状态 :visited 链接访问后状态 :hover 鼠标悬浮链接的状态 :active 激活链接时的状态 伪类的顺序：link - visited -&gt; hover -&gt; active 用户行为伪类 :hover 用于当用户把鼠标移动到元素上面时的效果 :active 用于用户点击元素那一下的效果 :focus用于元素成为焦点，这个经常用在表单元素上 顺序： focus - &gt; hover -&gt; activeIE6下只有&lt;a&gt;支持:hover，IE6,7都不支持:focus、:active 1234567891011121314151617181920212223//html&lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;link效果&lt;/a&gt;&lt;a href=&quot;#&quot; class=&quot;visited&quot;&gt;visited效果&lt;/a&gt;&lt;a href=&quot;#&quot; class=&quot;hover&quot;&gt;hover效果&lt;/a&gt;&lt;a href=&quot;#&quot; class=&quot;active&quot;&gt;active效果&lt;/a&gt;&lt;input type=&quot;text&quot; name=&quot;&quot;&gt;//css.link:link &#123; background: pink;&#125;.visited:visited&#123; background: #cca;&#125;.hover:hover &#123; background: lightblue;&#125;.active:active &#123; background: lightgreen;&#125;input:focus &#123; outline: 2px solid red;&#125; ####UI元素状态伪类这类伪类主要针对form元素| 伪类 | 功能 |适用元素||:—–:|:—–:|| :enabled |匹配表单中激活的元素| type=”text”|| :disabled|匹配表单中禁用的元素| type=”text”|| :checked |匹配表单中被选中的radio（单选框）或checkbox（复选框）元素| type=”radio” ||::selection| 匹配用户当前选中的元素|123input[type=&quot;radio&quot;]:disabled &#123; background-color: red;&#125; ####结构伪类 :first-child* 选择某个元素的第一个子元素,IE6不支持； :last-child* 选择某个元素的最后一个子元素； :nth-child()* 选择某个元素的一个或多个特定的子元素，IE6-8，Firefox3.0不兼容； :nth-child(length)&ensp;&ensp;参数是具体数字 :nth-child(n)&ensp;&ensp;参数是n,n从0开始计算 :nth-child(nlength)&ensp;&ensp;n的倍数选择，n从0开始算 :nth-child(n+length)&ensp;&ensp;选择大于length后面的元素 :nth-child(-n+length)&ensp;&ensp;选择小于length前面的元素 :nth-child(nlength+1)&ensp;&ensp;表示隔几选一 123456789101112131415li:last-child &#123; background: #f9f57a;&#125;li:nth-child(2) &#123; background: #c8cac9;&#125;li:nth-child(2n) &#123; border: 3px solid red;&#125;li:nth-child(n+3) &#123; border: 3px solid yellow;&#125;li:nth-child(-n+3) &#123; border: 3px solid yellow;&#125; :nth-last-child()选择某个元素的一个或多个特定的子元素，从这个元素的最后一个子元素开始算，IE6-8，Firefox3.0不兼容； :nth-of-type()选择指定的元素,与nth-child类似也可以使用表达式，IE6-8，Firefox3.0不兼容； :nth-last-of-type()选择指定的元素，从元素的最后一个开始计算； :first-of-type选择一个上级元素下的第一个同类子元素，与first-child类似，不过是指定了元素类型； :last-of-type选择一个上级元素的最后一个同类子元素； :only-child选择的元素是它的父元素的唯一一个子元素，兼容到IE9； :only-of-type选择一个元素是它的上级元素的唯一一个相同类型的子元素，IE6-8，Firefox3.0不兼容； :empty选择的元素里面没有任何内容，兼容到IE9； :not()选择不匹配的元素，兼容到IE9； target 匹配文档中特定”id”点击后的效果，兼容到IE9。1234567891011121314151617181920//html&lt;a href=&quot;#test&quot;&gt;test&lt;/a&gt;&lt;div&gt;第一个div&lt;/div&gt;&lt;p&gt;第一个p&lt;/p&gt;&lt;div id=&quot;test&quot;&gt;第二个div&lt;/div&gt;&lt;p&gt;第二个p&lt;/p&gt;&lt;p&gt;&lt;/p&gt;//cssdiv:not&#123; background-color: lightgrey;&#125;p:empty&#123; height:30px; width:30px; background:pink;&#125;div:target&#123; color:blue;&#125; ####伪元素选择器| 伪元素 | 功能 ||:—–:|:—–:||:first-line| 匹配元素的第一行|| :first-letter| 匹配元素的第一个字母|| :before |元素之前插入生成的内容|| :after| 元素之后插入生成的内容|| :selecton| 改变浏览网页选中文的默认效果|伪元素可以用::也可以用:关于first-letter使用条件比较苛刻，一般只有有兴趣可以参考深入CSS ::first-letter伪元素及其实例 123li::first-letter &#123; font-size: 56px;&#125; ###伪类和伪元素的区别 &gt; CSS 伪类用于向某些选择器添加特殊的效果。 CSS 伪元素用于将特殊的效果添加到某些选择器。两者都与选择器相关，可以添加一些“特殊”的效果。 区别：&ensp;&ensp;&ensp;&ensp;伪类的效果可以通过添加一个实际的类来达到，而伪元素的效果则需要通过添加一个实际的元素才能达到 伪类12345678910//html&lt;p&gt; &lt;i&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt;+&lt;/p&gt;//cssp&gt;i:first-child &#123; color: red&#125; 伪类 :first-child 添加样式到第一个子元素如果我们不使用伪类，而希望达到上述效果，可以这样做：12345678910//html&lt;p&gt; &lt;i class=&quot;first-child&quot;&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt;&lt;/p&gt;//css.first-child &#123; color: red&#125; 我们给第一个子元素添加一个类，然后定义这个类的样式。 伪元素：1234567//html&lt;p&gt;I am stephen lee.&lt;/p&gt;//cssp:first-letter &#123; color: red&#125; 伪元素 :first-letter 添加样式到第一个字母那么如果我们不使用伪元素，要达到上述效果，我们可以这样做： 123//html&lt;p&gt; &lt;span&gt;I&lt;/span&gt; am stephen lee.","categories":[],"tags":[{"name":"笔记，分享，前端","slug":"笔记，分享，前端","permalink":"http://yoursite.com/tags/笔记，分享，前端/"}]},{"title":"FirstPassage","slug":"FirstPassage","date":"2017-03-20T13:20:46.000Z","updated":"2017-03-20T13:25:25.144Z","comments":true,"path":"2017/03/20/FirstPassage/","link":"","permalink":"http://yoursite.com/2017/03/20/FirstPassage/","excerpt":"第一篇博文（搭建博客的坑！！！）","text":"第一篇博文（搭建博客的坑！！！） 1.关于Hexo nmp安装Hexo 打开命令行工具，执行如下命令： $ npm install -g hexo 创建文件夹 本人是直接在D盘创建了一个名叫blog的文件夹，在blog中创建了Hexo文件夹。（这个看个人喜好吧，用命令行也未尝不可。） 初始化 在Hexo目录下打开命令行工具，执行： hexo init 之后执行： hexo server 会看到： INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 访问：http://localhost:4000/就可以看到Hexo的初始页面了。 2.关于个人设置 基本信息 本人修改了title、subtitle、author的内容，如下： 1234567# Sitetitle: YangKunyi的博客subtitle: 爱看书的杨杨description:author: FrannieYilanguage:timezone: 第一个坑注意每一个冒号后面都有一个空格 无法生效的写法：title:Drubear的博客有效的写法：title:[空格]Drubear的博客 主题 知乎 - 好看的主题！ 使用git命令在github上clone下自己喜欢的主题，本人使用的是litten的yilia。 配置主题根据clone下来的主题将页面进行个性化设置。可以参考博主给的各种参数。 部署设置 只需简单的执行 hexo d But，重点来了前方巨坑请注意 首先在github上建立一个仓库，名字叫做：[你的用户名].github.io注意，你的用户名必须与你实际的用户名一字不差！ 拥有了个人的GitHubPages后，再回到Hexo的_config.yml文件，找到Deployment章节，做以下修改：（以FrannieYi为用户名为例）123456# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/FrannieYi/FrannieYi.github.io.git branch: master 以上两步做完后，执行 hexo d如果没有报错，你是幸运的。本人在这个坑里栽了无数次，系统报错 ERROR Deployer not found: Git 最后发现这个错误是因为少运行了一行代码： npm install hexo-deployer-git --save 运行完以上代码终于，本人泪流满面的看到了自己亲手搭建的博客。","categories":[],"tags":[{"name":"hexo,github","slug":"hexo-github","permalink":"http://yoursite.com/tags/hexo-github/"}]}]}