<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨坤怡</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangkunyi.com/"/>
  <updated>2019-07-15T14:49:36.760Z</updated>
  <id>http://yangkunyi.com/</id>
  
  <author>
    <name>杨坤怡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Daily4</title>
    <link href="http://yangkunyi.com/2019/07/15/Daily4/"/>
    <id>http://yangkunyi.com/2019/07/15/Daily4/</id>
    <published>2019-07-15T14:44:58.000Z</published>
    <updated>2019-07-15T14:49:36.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说在前面：今天上了一堂自己觉得十分有用的课，是来自于部门的经理的，很能感受到人与人的区别。</p></blockquote><a id="more"></a><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>学习投诉相关的流程和知识，可能跟天气有关，一天都感觉闷闷的，没什么精神，就跟同事说的那样，知识就是不进脑子，感觉一直在脑子外面徘徊。</li></ul><h2 id="分享（有效的职场“开启模式”）"><a href="#分享（有效的职场“开启模式”）" class="headerlink" title="分享（有效的职场“开启模式”）"></a>分享（有效的职场“开启模式”）</h2><ul><li>你最满意今年完成的哪一项任务？</li><li>你今年做的最有价值的一件事是什么？</li></ul><h4 id="雇主的思维方式："><a href="#雇主的思维方式：" class="headerlink" title="雇主的思维方式："></a><strong>雇主的思维方式：</strong></h4><ul><li>你的工作对<strong>部门</strong>产生了什么价值，有结果吗？有数据吗？你能创造什么价值？</li><li>你的过去不错，但<strong>未来</strong>还有多少价值可言挖掘呢？</li></ul><h4 id="个人：学习思维-amp-职场思维"><a href="#个人：学习思维-amp-职场思维" class="headerlink" title="个人：学习思维&amp;职场思维"></a><strong>个人：学习思维&amp;职场思维</strong></h4><h4 id="影响晋升的三个角色："><a href="#影响晋升的三个角色：" class="headerlink" title="影响晋升的三个角色："></a><strong>影响晋升的三个角色：</strong></h4><ul><li>评估者（HR）</li><li>决策者（BOSS）</li><li>影响者（COLLEAGUE）</li></ul><h4 id="影响因素："><a href="#影响因素：" class="headerlink" title="影响因素："></a><strong>影响因素：</strong></h4><ul><li>职场“能见度”</li><li>职场领导力</li><li>工作能力</li></ul><h3 id="一、学会聪明的工作（）"><a href="#一、学会聪明的工作（）" class="headerlink" title="一、学会聪明的工作（）"></a>一、学会聪明的工作（）</h3><blockquote><p>前言：①工作来了不能直接拒绝 ②三思而后行 ③行必果（反馈）</p></blockquote><h4 id="（1）做“正确”的事"><a href="#（1）做“正确”的事" class="headerlink" title="（1）做“正确”的事"></a>（1）做“正确”的事</h4><ul><li>目标管理</li><li>掌握重点</li><li>及时反馈</li></ul><h4 id="（2）正确的做事"><a href="#（2）正确的做事" class="headerlink" title="（2）正确的做事"></a>（2）正确的做事</h4><ul><li>不重新造轮子</li><li>成为改进者</li><li>学会复盘</li></ul><h4 id="（3）做一个靠谱的人"><a href="#（3）做一个靠谱的人" class="headerlink" title="（3）做一个靠谱的人"></a><strong>（3）做一个靠谱的人</strong></h4><ul><li>结论先行，强有力的数据支撑，例证强化大家的印象，重申论点</li><li>善用逻辑树，把难题拆成很多小问题，一个一个解决</li><li>不断超越对方的预期，合理地作出承诺，一旦承诺就要完成</li></ul><h4 id="（4）如何摆脱无意义的事情"><a href="#（4）如何摆脱无意义的事情" class="headerlink" title="（4）如何摆脱无意义的事情"></a>（4）如何摆脱无意义的事情</h4><ul><li>真正重要的事情：<ul><li>影响时间长</li><li>影响范围广</li></ul></li></ul><h3 id="二、领导力的自我养成"><a href="#二、领导力的自我养成" class="headerlink" title="二、领导力的自我养成"></a>二、领导力的自我养成</h3><h4 id="（1）方向感"><a href="#（1）方向感" class="headerlink" title="（1）方向感"></a>（1）方向感</h4><ul><li>大局观（阳台理论）<ul><li>阳台理论：当你站在十字路口看到的东西是什么？“退一步”当你站在30楼的阳台上，你又看到了什么？</li></ul></li><li>更深一层思考</li></ul><h4 id="（2）能量感"><a href="#（2）能量感" class="headerlink" title="（2）能量感"></a>（2）能量感</h4><ul><li>赞美（并不是一个好就可以概括的）</li><li>驱动</li></ul><h4 id="（3）信任感"><a href="#（3）信任感" class="headerlink" title="（3）信任感"></a>（3）信任感</h4><ul><li>一味退让不可取（根据事情的性质来判断）</li><li>好合作，有原则，感反击</li></ul><h4 id="（4）OKR"><a href="#（4）OKR" class="headerlink" title="（4）OKR"></a>（4）OKR</h4><blockquote><p>OKR（Objectives and Key Results）全称「目标和关键成果」，是一套明确和跟踪目标及其完成情况的管理工具和方法。</p></blockquote><h3 id="三、提升职场“能见度”"><a href="#三、提升职场“能见度”" class="headerlink" title="三、提升职场“能见度”"></a>三、提升职场“能见度”</h3><ul><li>给自己贴正面标签</li><li>做跨部门合作项目</li><li>找到职场导师</li><li>穿得更高级一点</li><li>“营销”自己的业绩（结果）</li><li>利用外部曝光度</li></ul><h3 id="四、开放的职场心态"><a href="#四、开放的职场心态" class="headerlink" title="四、开放的职场心态"></a>四、开放的职场心态</h3><blockquote><p>“巧者劳，智者忧，无能者，无所求，饱食而遨游。    ——庄子”</p></blockquote><p>（四象限原则）</p><ul><li>“变”：<ul><li>摆脱职业发展线性思维（如：只要…就…）</li><li>做好职场隐形晋升</li><li>这个世界上唯一不变的就是变化</li></ul></li></ul><h2 id="分享待跟进事项"><a href="#分享待跟进事项" class="headerlink" title="分享待跟进事项"></a>分享待跟进事项</h2><ul><li>建立自己的“优势银行”</li><li>微信文案</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说在前面：今天上了一堂自己觉得十分有用的课，是来自于部门的经理的，很能感受到人与人的区别。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="日报" scheme="http://yangkunyi.com/tags/%E6%97%A5%E6%8A%A5/"/>
    
      <category term="分享" scheme="http://yangkunyi.com/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>WeeklyMind-100</title>
    <link href="http://yangkunyi.com/2019/07/14/WeeklyMind-10/"/>
    <id>http://yangkunyi.com/2019/07/14/WeeklyMind-10/</id>
    <published>2019-07-14T14:47:35.000Z</published>
    <updated>2019-07-15T15:04:34.994Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说在前面：前天看了一个数据提取的sql，发现自己的差距还很大呀，所以这个周末会继续学习。</p></blockquote><a id="more"></a><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>保证自己的心态没有问题就好了，一切都在开始慢慢步入正轨，跟同事的第一次聚餐也结束了，大家这两个月的实习生活也十分的精彩，希望在每个小伙伴在接下来的工作里都能有所成长和发展。</li><li>收到一个可以写点东西的消息，这个周末会思考一下，如果能有所展现也是不错的。</li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h4 id="一、何为战略设计思维（看书）"><a href="#一、何为战略设计思维（看书）" class="headerlink" title="一、何为战略设计思维（看书）"></a>一、何为战略设计思维（看书）</h4><h3 id="二、SQL"><a href="#二、SQL" class="headerlink" title="二、SQL"></a>二、SQL</h3><h5 id="组合WHERE子句"><a href="#组合WHERE子句" class="headerlink" title="组合WHERE子句"></a>组合WHERE子句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">//AND 操操作符</div><div class="line">SELECT prod_name,prod_price,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE vend_id＝&apos;DLL01&apos; AND prod_price&lt;＝4;</div><div class="line"></div><div class="line">//OR 操作符</div><div class="line">SELECT prod_name,prod_price,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE vend_id＝&apos;DLL01&apos; OR vend_id＝&apos;BRS01&apos;;</div><div class="line"></div><div class="line">//求值顺序（AND先于OR）</div><div class="line">SELECT prod_name,prod_price,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE (vend_id＝&apos;DLL01&apos; OR vend_id＝&apos;BRS01&apos;)</div><div class="line">      AND prod_price&gt;＝10;</div><div class="line"></div><div class="line">//IN操作符</div><div class="line">SELECT prod_name,prod_price,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE vend_id IN (&apos;DLL01&apos;,&apos;BRS01&apos;)</div><div class="line">ORDER BY prod_name;</div><div class="line"></div><div class="line">//同上功能</div><div class="line">SELECT prod_name,prod_price,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE vend_id ＝ &apos;DLL01&apos; OR vend_id ＝ &apos;BRS01&apos;</div><div class="line">ORDER BY prod_name;</div><div class="line"></div><div class="line">//NOT操作符(等通于不等于的功能)</div><div class="line">SELECT prod_name</div><div class="line">FROM Products</div><div class="line">WHERE NOT vend_id ＝ &apos;DLL01&apos;</div><div class="line">ORDER BY prod_name;</div></pre></td></tr></table></figure><ul><li>为什么要用IN操作符？<ul><li>在很多合法选项时，IN操作符的语法更清晰，更直观</li><li>在与其他AND和OR操作符组合使用IN的时候，求值顺序更加容易管理</li><li>IN操作符一般比一组OR操作符执行得更快</li><li>IN最大的优点是可以包含其他SELECT语句，能够更动态地建立WHERE子句</li></ul></li></ul><h5 id="用通配符进行过滤"><a href="#用通配符进行过滤" class="headerlink" title="用通配符进行过滤"></a>用通配符进行过滤</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">//LIKE操作符</div><div class="line">// % 表示任何字符出现任意次数</div><div class="line">SELECT prod_name,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE prod_name LIKE &apos;Fish%&apos;;</div><div class="line"></div><div class="line">SELECT prod_name,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE prod_name LIKE &apos;%bean bag%&apos;;</div><div class="line"></div><div class="line">SELECT prod_name,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE prod_name LIKE &apos;F%y&apos;;</div><div class="line"></div><div class="line">// _ 与 % 类似，但只匹配单个字符</div><div class="line">SELECT prod_name,prod_id</div><div class="line">FROM Products</div><div class="line">WHERE prod_name LIKE &apos;__ inch teddy bear&apos;;</div><div class="line"></div><div class="line">// [] 用来指定一个字符集</div><div class="line">SELECT cust_contact</div><div class="line">FROM Customers</div><div class="line">WHERE cust_contact LIKE &apos;[JM]%&apos;</div><div class="line">ORDER BY cust_contact;</div><div class="line"></div><div class="line">// 反义用^来表示(或者用NOT来表示)</div><div class="line">SELECT cust_contact</div><div class="line">FROM Customers</div><div class="line">WHERE cust_contact LIKE &apos;[^JM]%&apos;</div><div class="line">ORDER BY cust_contact;</div></pre></td></tr></table></figure><ul><li>使用通配符的技巧：<ul><li>不要过度使用通配符</li><li>在确实需要使用通配符的时候，也尽量不要把它用在搜索模式的开始处。将通配符放在开始，搜索是最慢的。</li><li>仔细注意通配符的位置。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说在前面：前天看了一个数据提取的sql，发现自己的差距还很大呀，所以这个周末会继续学习。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="SQL" scheme="http://yangkunyi.com/tags/SQL/"/>
    
      <category term="周报" scheme="http://yangkunyi.com/tags/%E5%91%A8%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>Daily3</title>
    <link href="http://yangkunyi.com/2019/07/11/Daily3/"/>
    <id>http://yangkunyi.com/2019/07/11/Daily3/</id>
    <published>2019-07-11T14:54:57.000Z</published>
    <updated>2019-07-11T14:56:08.234Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写在前面：人啊，总是对自己求而不得的东西有着无比的向往，一旦得到了又会是怎么样呢？</p></blockquote><a id="more"></a><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>比较轻松的一天，工作是自己喜欢又沉浸其中的，我很高兴自己还保持着那样一颗平常心，尽管周遭事物与人都在改变。</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h4 id="筛选数据"><a href="#筛选数据" class="headerlink" title="筛选数据"></a>筛选数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">//相等检验，使用WHERE子句</div><div class="line">SELECT prod_name,prod_price</div><div class="line">FROM Products</div><div class="line">WHERE prod_price＝3.49;</div><div class="line"></div><div class="line">//检查单个值</div><div class="line">SELECT prod_name,prod_price</div><div class="line">FROM Products</div><div class="line">WHERE prod_price&lt;10;</div><div class="line"></div><div class="line">//不匹配检查</div><div class="line">SELECT vend_id,prod_name</div><div class="line">FROM Products</div><div class="line">WHERE vend_id&lt;&gt;&apos;DLL01&apos;;(or !＝)</div><div class="line"></div><div class="line">//范围值检查</div><div class="line">SELECT prod_name,prod_price</div><div class="line">FROM Products</div><div class="line">WHERE prod_price BETWEEN 5 AND 10;</div><div class="line"></div><div class="line">//空值检查</div><div class="line">SELECT cust_name</div><div class="line">FROM Customers</div><div class="line">WHERE cust_email IS MULL;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写在前面：人啊，总是对自己求而不得的东西有着无比的向往，一旦得到了又会是怎么样呢？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="日报" scheme="http://yangkunyi.com/tags/%E6%97%A5%E6%8A%A5/"/>
    
      <category term="SQL" scheme="http://yangkunyi.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Daily2</title>
    <link href="http://yangkunyi.com/2019/07/09/Daily2/"/>
    <id>http://yangkunyi.com/2019/07/09/Daily2/</id>
    <published>2019-07-09T15:25:16.000Z</published>
    <updated>2019-07-09T15:26:54.359Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说在前面，社会主义的一块砖，哪里需要哪里搬</p></blockquote><a id="more"></a><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>今日份工作接线支撑，中间抽空了解了线下工作。无异常</p><h2 id="小组瞎聊"><a href="#小组瞎聊" class="headerlink" title="小组瞎聊"></a>小组瞎聊</h2><ul><li>累了之后脑袋一片空白</li><li>接快了之后觉得自己就是一个机器</li><li>智能知识库暂时毫无作用 </li><li>不要太刻意的去模仿，遇到事情多想想就好了</li><li>措施：人力调度；增加话术（没有及时更新新的话术，场景已经变化了，但是还是只有一个话术）；时时关注现状；培养一线的能力，就是为了解决这种问题；线下工单情况，工作强度强了很多。</li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h4 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//按照产品名称排序</div><div class="line">SELECT prod_name</div><div class="line">FROM Products</div><div class="line">ORDER BY prod_name;(一定要放到最后)</div><div class="line"></div><div class="line">//按多个排序</div><div class="line">SELECT prod_name,prod_id,prod_price</div><div class="line">FROM Products</div><div class="line">ORDER BY prod_price,prod_name;</div><div class="line"></div><div class="line">//按列位置排序</div><div class="line">SELECT prod_name,prod_id,prod_price</div><div class="line">FROM Products</div><div class="line">ORDER BY 2,3;</div><div class="line"></div><div class="line">//指定排序方向</div><div class="line">//(升序ASC或者ASCENDING是默认的，降序是DESC或者DESCENDING)</div><div class="line">SELECT prod_name,prod_id,prod_price</div><div class="line">FROM Products</div><div class="line">ORDER BY prod_price DESC;</div><div class="line"></div><div class="line">//多个列排序</div><div class="line">SELECT prod_name,prod_id,prod_price</div><div class="line">FROM Products</div><div class="line">ORDER BY prod_price DESC,prod_name;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说在前面，社会主义的一块砖，哪里需要哪里搬&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="日报" scheme="http://yangkunyi.com/tags/%E6%97%A5%E6%8A%A5/"/>
    
      <category term="SQL" scheme="http://yangkunyi.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Daily1</title>
    <link href="http://yangkunyi.com/2019/07/08/Daily1/"/>
    <id>http://yangkunyi.com/2019/07/08/Daily1/</id>
    <published>2019-07-08T14:44:09.000Z</published>
    <updated>2019-07-09T15:26:56.372Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说在前面，今天雨，我希望我们在一起。</p></blockquote><a id="more"></a><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>今天结束了在线的工作，总的来说在线的工作其实没有热线那么累，热线自己还会将嗓子说哑了，但是在线就是开心的在聊天，不能解决也还有疑难可以提，嘿嘿。</li><li>项目的话，只能说自己考虑的方面还是不够全面，能想的确实是想了，但是能做到却不一定能做，但是自己只要把自己能做的做到就可以了。</li><li>这个月就有一个述职了，所以要开始准备了。</li><li>其他好像没什么了吧，就是自己接触到行业的知识还不够吧。</li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h4><h5 id="检索数据-SELECT语句"><a href="#检索数据-SELECT语句" class="headerlink" title="检索数据(SELECT语句)"></a>检索数据(SELECT语句)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">//检索单个列表</div><div class="line">SELECT prod_name</div><div class="line">FROM Products;</div><div class="line"></div><div class="line">//检索多个列表</div><div class="line">SELECT prod_name,prod_id，prod_price</div><div class="line">FROM Products;</div><div class="line"></div><div class="line">//检索所有列</div><div class="line">SELECT *</div><div class="line">FROM Products;</div><div class="line"></div><div class="line">//检索不同的值</div><div class="line">SELECT DISTINCT vend_id</div><div class="line">FROM Products;</div><div class="line"></div><div class="line">//限制结果</div><div class="line">(SQL\Access)</div><div class="line">SELECT top 5 prod_name</div><div class="line">FROM Products;</div><div class="line">(DB2)</div><div class="line">SELECT prod_name</div><div class="line">FROM Products</div><div class="line">FETCH FIRST 5 ROWS ONLY;</div><div class="line">(Oracle)</div><div class="line">SELECT prod_name</div><div class="line">FROM Product</div><div class="line">WHERE ROWNUM &lt;＝5</div><div class="line">（MySQL\MariaDB\PostgreSQL\SQLite）</div><div class="line">SELECT prod_name</div><div class="line">FROM Products</div><div class="line">LIMIT 5;</div><div class="line"></div><div class="line">//为了得到后五行数据</div><div class="line">SELECT prod_name</div><div class="line">FROM Products</div><div class="line">LIMIT 5 OFFSET 5;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说在前面，今天雨，我希望我们在一起。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="日报" scheme="http://yangkunyi.com/tags/%E6%97%A5%E6%8A%A5/"/>
    
      <category term="SQL" scheme="http://yangkunyi.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>WeeklyMind-9</title>
    <link href="http://yangkunyi.com/2019/07/07/WeeklyMind-9/"/>
    <id>http://yangkunyi.com/2019/07/07/WeeklyMind-9/</id>
    <published>2019-07-07T14:58:01.000Z</published>
    <updated>2019-07-07T15:10:55.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说在前面：这个周开始，自己就正式开始了上班的生活，上个周还在和各位同学依依不舍，这个周一切都切换到了不同的轨道，就简单说一下这个周发生的事情吧。</p></blockquote><a id="more"></a><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>总之，一切都还是那么生疏，但是自己在开始慢慢转变自己的观念了，从一个在学校只有输入的学生（或许有少量的输出），慢慢转变为一个需要每天都有输出的工作者。</p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>刚刚搬到这个地方，住了大概两个周了吧，周边环境还是很不错，现状唯一的不好就是还没有锅，不能自己做东西吃，这是很不方便的，所以先定下个月去购买厨房用品，这个月先坚持过去。</p><h3 id="随心"><a href="#随心" class="headerlink" title="随心"></a>随心</h3><p>自己除了工作以外的时间安排还不够合理，没有主动的push自己，不管是心理上还是身体上，都不是自己理想中的工作生活，尽管现在可能是累了一点，但是学习这个事情，还是不能放到玩耍的前面，所以接下来这个周，自己要开始慢慢调整。</p><h3 id="调整待跟进事项"><a href="#调整待跟进事项" class="headerlink" title="调整待跟进事项"></a>调整待跟进事项</h3><ul><li>每天简单的更新自己的微博（工作和学习内容），有机会要更新自己的微信公众号（想法和当下情感）。</li><li>每天看至少二十页的书，需要给自己充电。</li><li>马上教师资格证就要开始考试了，自己要开始准备，既然答应了就要做到。</li><li>英语不应该放下，自己每天应抽出半个小时，看看英语。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说在前面：这个周开始，自己就正式开始了上班的生活，上个周还在和各位同学依依不舍，这个周一切都切换到了不同的轨道，就简单说一下这个周发生的事情吧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="周记" scheme="http://yangkunyi.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
      <category term="工作" scheme="http://yangkunyi.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>VIDEO IDER</title>
    <link href="http://yangkunyi.com/2019/06/15/VIDEO-IDER/"/>
    <id>http://yangkunyi.com/2019/06/15/VIDEO-IDER/</id>
    <published>2019-06-15T14:51:39.000Z</published>
    <updated>2019-07-15T15:05:26.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写在前面：公司四周年运营部需要拍摄视频，以下是自己和小伙伴们的想法。</p></blockquote><a id="more"></a><h2 id="运营人的一天"><a href="#运营人的一天" class="headerlink" title="运营人的一天"></a>运营人的一天</h2><h3 id="表达主题"><a href="#表达主题" class="headerlink" title="表达主题"></a>表达主题</h3><ol><li>客户至上</li><li>团队协作</li><li>团队陪伴</li><li>坚持</li></ol><h3 id="视频框架"><a href="#视频框架" class="headerlink" title="视频框架"></a>视频框架</h3><blockquote><p>背景：一位本月生日的客服小伙伴，生日仍然在工作。</p></blockquote><ul><li>您好，请问有什么可以帮您？（获取用户需求）</li><li>遇到困难时，有组长支撑（组长是一位准妈妈）</li><li>以需求为导向对接各个部门（解决用户问题过程）</li><li>中午吃饭，心情不太好（担心客户的问题没有解决）</li><li>下午参与生日会（之前的某一个客户问题解决了，生日会来送锦旗）</li></ul><h3 id="需要拍摄的场景"><a href="#需要拍摄的场景" class="headerlink" title="需要拍摄的场景"></a>需要拍摄的场景</h3><ul><li>客服接到电话收到需求的场景</li><li>组长帮助的场景</li><li>各部门解决问题的场景</li><li>吃饭的场景</li><li>下午生日会的场景（包括锦旗）</li><li>之前客户的回忆场景</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写在前面：公司四周年运营部需要拍摄视频，以下是自己和小伙伴们的想法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="视频" scheme="http://yangkunyi.com/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="想法" scheme="http://yangkunyi.com/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>微信历史文章（持续更新）</title>
    <link href="http://yangkunyi.com/2019/02/25/%E5%BE%AE%E4%BF%A1%E5%8E%86%E5%8F%B2%E6%96%87%E7%AB%A0%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://yangkunyi.com/2019/02/25/微信历史文章（持续更新）/</id>
    <published>2019-02-25T02:19:04.000Z</published>
    <updated>2019-02-28T13:43:04.065Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己将所写的微信文章以及排版的微信文章都整理到这里，以便查看。</p></blockquote><a id="more"></a><blockquote><p>学院公众号</p></blockquote><ol><li><a href="https://mp.weixin.qq.com/s/fEt7XXyzBgUi7oBp1ApflQ" target="_blank" rel="external">（【新媒体一岁啦】幸会，有你~）</a></li><li><a href="https://mp.weixin.qq.com/s/BRnjtDIPNbFY2uBGYb1EWA" target="_blank" rel="external">（你的端午已到，请查收）</a></li><li><a href="https://mp.weixin.qq.com/s/5D7t8GwXeZswA5iYMqRAVg" target="_blank" rel="external">（放假了小视频）</a></li><li><a href="https://mp.weixin.qq.com/s/nC4lN-MrkeRYGdCzwMSz4A" target="_blank" rel="external">（达康书记给你发了一张“三下乡”体验卡，快来领取）</a></li><li><a href="https://mp.weixin.qq.com/s/D9A9z9xL2hRc2FamQK3Plg" target="_blank" rel="external">（经济管理学院积极开展“学习总书记讲话 做合格共青团员”系列活动）</a></li><li><a href="https://mp.weixin.qq.com/s/qUFZHdQXeuwTMvMEZHioHg" target="_blank" rel="external">（“不忘初心跟党走”入团仪式篇）</a></li><li><a href="https://mp.weixin.qq.com/s/yUhM3s-V0U8luRJ37TLz1Q" target="_blank" rel="external">（【PK赢大奖】1000元大奖！团体赛、个人赛！这个主题网络活动这么嗨）</a></li><li><a href="https://mp.weixin.qq.com/s/hpmvRX98NeCEcIqrq6txQw" target="_blank" rel="external">（【重邮征集令】现代邮政学院LOGO、经管学院吉祥物征集）</a></li><li><a href="https://mp.weixin.qq.com/s/_prI-1Lqu21PzfkHAj6wQA" target="_blank" rel="external">（经管RADIO第十期|我们的圣诞礼）</a></li><li><a href="https://mp.weixin.qq.com/s/KzdTND_wI5a1Whc6T-5zoA" target="_blank" rel="external">（经管小奥运之奥运小达人评选开始啦！）</a></li><li><a href="https://mp.weixin.qq.com/s/tPEuVB_CxpO6ddrf_ojgwQ" target="_blank" rel="external">（【投票】曲艺大赛参赛节目微信投票）</a></li><li><a href="https://mp.weixin.qq.com/s/J42xzTIUr29qrFASHYvnCA" target="_blank" rel="external">（【经济管理学院十佳科技之星线上票选】）</a></li><li><a href="https://mp.weixin.qq.com/s/kF6CorIDWlEdZaWv8GqZcQ" target="_blank" rel="external">（主曲艺新声绝代 持经管至尚风华）</a></li><li><a href="https://mp.weixin.qq.com/s/DAQsFp29zEWAQ_CAzZhMig" target="_blank" rel="external">（科创理想浩瀚 科技之星璀璨）</a></li><li><a href="https://mp.weixin.qq.com/s/lvG0BSFSSJHnyj07YMjzgg" target="_blank" rel="external">（支教第四课：带不走的支教情怀）</a></li><li><a href="https://mp.weixin.qq.com/s/jnT7Eltu12MLOucoc2qb5g" target="_blank" rel="external">（经管法学专场报告人先进事迹简介）</a></li><li><a href="https://mp.weixin.qq.com/s/V132eluNDzUKkDO97fcZYw" target="_blank" rel="external">（【活动报名】曲艺大赛终极夜主持人线上海选）</a></li><li><a href="https://mp.weixin.qq.com/s/tMJC3bTTHyllyYvJSWv4YQ" target="_blank" rel="external">（经管小奥运开始报名啦！！！）</a></li><li><a href="https://mp.weixin.qq.com/s/Kqd91W2emkr5v60k6yxMFQ" target="_blank" rel="external">（新起点，新征程—记经济管理学院“团学工作一体化”运营启动大会）</a></li><li><a href="https://mp.weixin.qq.com/s/q1uviEgtax1933SyUUFTKw" target="_blank" rel="external">（【经管RADIO第五期】从你的全重庆路过）</a></li><li><a href="https://mp.weixin.qq.com/s/iSKCuA2iMWJF75rJGGYsyQ" target="_blank" rel="external">（蓝瘦，香菇！为什么我那么忙！）</a></li><li><a href="https://mp.weixin.qq.com/s/mnyzeAqSkc_U4WTOfud45g" target="_blank" rel="external">（铲屎官带你看可爱又迷人的汪星人）</a></li><li><a href="https://mp.weixin.qq.com/s/-bzmdHX56vPTElo6l9Vygg" target="_blank" rel="external">（生活服务中心成立暨第一期培训大会，我们拭目以待）</a></li><li><a href="https://mp.weixin.qq.com/s/8g2wPy_sxMl2_BCz7ImkTQ" target="_blank" rel="external">（重邮经管今日速报）</a></li><li><a href="https://mp.weixin.qq.com/s/fkPvuMrURbNjqE836yMqnw" target="_blank" rel="external">（经济管理学院学生事务管理体系介绍）</a></li><li><a href="https://mp.weixin.qq.com/s/ioHgXNHzBvV4NgjkoGF-MA" target="_blank" rel="external">（情系重邮 相约经管）</a></li><li><a href="https://mp.weixin.qq.com/s/YLwhNNCtzO9QeRXi-RB_RA" target="_blank" rel="external">（微微一笑，在经管遇见那个Ta）</a></li><li><a href="https://mp.weixin.qq.com/s/YZLg-_UPaP5n1x9OX2dwqA" target="_blank" rel="external">（重庆邮电大学丨经济管理学院欢迎你）</a></li><li><a href="https://mp.weixin.qq.com/s/m-IBvXZeZwUyQH2IYLJsBw" target="_blank" rel="external">（青春三下乡 美丽中国行||三下乡回顾—“助V邮我”实践服务队）</a></li><li><a href="https://mp.weixin.qq.com/s/qNUtUeMllYIVDH8q4QiJLg" target="_blank" rel="external">（青春三下乡 美丽中国行||三下乡回顾—小平的后“忆”国情观察团）</a></li><li><a href="https://mp.weixin.qq.com/s/N8UKwDAZCkv2sYqcabqOzw" target="_blank" rel="external">（青春三下乡 美丽中国行||三下乡回顾—e行·益童）</a></li><li><a href="https://mp.weixin.qq.com/s/2GV-izgWv2njVym2cJXdiw" target="_blank" rel="external">（青春三下乡 美丽中国行||三下乡回顾—闪闪红星）</a></li><li><a href="https://mp.weixin.qq.com/s/NP3eHnNheqKAtrsyg_TUmA" target="_blank" rel="external">（【青春三下乡，美丽中国行】“共系柚乡情”向你扔来一个柚子，快接住）</a></li><li><a href="https://mp.weixin.qq.com/s/5BV6FYge98w2fclZqC01vw" target="_blank" rel="external">（【青春三下乡，美丽中国行】“闪闪红星”体验敬老院日常，发挥专业特长）</a></li><li><a href="https://mp.weixin.qq.com/s/RIVblZSooAhUB9EgSpXH7Q" target="_blank" rel="external">（【青春三下乡，美丽中国行】追寻小平足迹，调研红色经济）</a></li><li><a href="https://mp.weixin.qq.com/s/JF-vfPURXwuzdnwI2LJZzA" target="_blank" rel="external">（军训汇演预热丨小编带你抢先看）</a></li><li><a href="https://mp.weixin.qq.com/s/SnVDcq0vsHchWvXlFnsbPA" target="_blank" rel="external">（如果你跟着追风筝的人团队，那么你将体验…….）</a></li><li><a href="https://mp.weixin.qq.com/s/YRAA5mbcMQxLBNpIP38X3w" target="_blank" rel="external">（【夜读】你的问题主要在于想的太多）</a></li><li><a href="https://mp.weixin.qq.com/s/Wb-hPR1lw1-c5YkskcdN9g" target="_blank" rel="external">（青春三下乡，美丽中国行）</a></li><li><a href="https://mp.weixin.qq.com/s/v_x0TgZaDCeAWyY_uOQBiw" target="_blank" rel="external">（2015级军训，我们来了！）</a></li><li><a href="https://mp.weixin.qq.com/s/VsBUnPh-qcymGeMsjQFyAw" target="_blank" rel="external">（经济管理学院2016年 第二专业招生简章）</a></li><li><a href="https://mp.weixin.qq.com/s/lYojKW2Nx3SFtBf1ctgRKQ" target="_blank" rel="external">（带上诚信，共赴考场）</a></li><li><a href="https://mp.weixin.qq.com/s/zq1QaY1M1L0k7Qvl2eGdnw" target="_blank" rel="external">（毕业季丨经济管理学院2016届毕业典礼暨授位仪式）</a></li><li><a href="https://mp.weixin.qq.com/s/cGw9BO5QXDsbZrpOU0icOw" target="_blank" rel="external">（万晓榆院长在毕业典礼上的讲话）</a></li><li><a href="https://mp.weixin.qq.com/s/-KWQZdrFGGKt4WkFIP5qSg" target="_blank" rel="external">（在大学，期末备考给你带来了哪些折磨……）</a></li><li><a href="https://mp.weixin.qq.com/s/UADsIQxtqN-7CJMHcbr2zg" target="_blank" rel="external">（经管RADIO第四期|火车旅行）</a></li><li><a href="https://mp.weixin.qq.com/s/xk6Lie3rncCJUnOqA1MhPw" target="_blank" rel="external">（【六一投稿】还记得你小时候的样子吗？……）</a></li></ol><blockquote><p>以下文章来自自己的公众号</p></blockquote><ol><li><a href="https://mp.weixin.qq.com/s/3LuBDj__mpdC_1ZqVcrIAQ" target="_blank" rel="external">（做朋友是不可能的）</a></li><li><a href="https://mp.weixin.qq.com/s/DMsASqPl2JdZl6vthZ8SJQ" target="_blank" rel="external">（旅行首长 | | 台湾花莲）</a></li><li><a href="https://mp.weixin.qq.com/s/n4zp7vcItlzZbI7isyA1vw" target="_blank" rel="external">（所有热爱的事情都要不留余力）</a></li><li><a href="https://mp.weixin.qq.com/s/xVS010QXJJD-0Xw19WhvOQ" target="_blank" rel="external">（一路回望，继续前行【第二篇】）</a></li><li><a href="https://mp.weixin.qq.com/s/YGBtFslWzBDYWg1YLl5PLA" target="_blank" rel="external">（一路回望，继续前行【第一篇】）</a></li><li><a href="https://mp.weixin.qq.com/s/3_8Y4Nwy3giNvZsg86uoCA" target="_blank" rel="external">（初来乍到）</a></li><li><a href="https://mp.weixin.qq.com/s/g0YY6-UWtYxhXv1PZNzEgg" target="_blank" rel="external">（懒癌晚期的老杨终于推文了）</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;自己将所写的微信文章以及排版的微信文章都整理到这里，以便查看。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="新媒体" scheme="http://yangkunyi.com/tags/%E6%96%B0%E5%AA%92%E4%BD%93/"/>
    
      <category term="微信公众号" scheme="http://yangkunyi.com/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>英语阅读技巧</title>
    <link href="http://yangkunyi.com/2018/09/27/%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB%E6%8A%80%E5%B7%A7/"/>
    <id>http://yangkunyi.com/2018/09/27/英语阅读技巧/</id>
    <published>2018-09-27T04:35:41.000Z</published>
    <updated>2019-02-27T04:39:52.028Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是根据老师上课整理的，一天的课程其实有很多的东西都需要在后续的练习中去体会，毕竟这是老师根据自己的经验总结的，自己只能作为参考，需要总结的是自己的经验，我这才是最后能把题做对的方法。</p></blockquote><a id="more"></a><h2 id="Day1-Reading-Skills"><a href="#Day1-Reading-Skills" class="headerlink" title="Day1 Reading Skills"></a>Day1 Reading Skills</h2><h3 id="Topic（主题）"><a href="#Topic（主题）" class="headerlink" title="Topic（主题）:"></a>Topic（主题）:</h3><ul><li>内容：2-3 key words (对象，话题)</li><li>位置：1st+2nd (开局)</li><li>特点：<ul><li>1.一篇文章的主题有且仅有一个(Only One)</li><li>2.复现频率高</li></ul></li></ul><blockquote><p>英语为了避免重复，总是用隐形再现，以下是隐形再现的方式。</p></blockquote><p>①同一置换<br>Eg: animalscreaturesspeciesindividualscommunity</p><p>②主题省略<br>Eg: the (height) trend in sports (NBA) may obscure an unrecognized reality.</p><p>③暗喻借代（逆向思维）</p><p>④逻辑暗示<br>A.change(改变):比如时间的改变<br>B.impact(影响)<br>C.relationship(关系)</p><h3 id="Thesis-statement-主旨"><a href="#Thesis-statement-主旨" class="headerlink" title="Thesis statement(主旨)"></a>Thesis statement(主旨)</h3><ul><li>内容：One sentence(主旨句)</li><li>位置：1st+2nd</li><li><p>寻找步骤与方式：</p><ul><li>1.第二段的开头是否有转折标志。</li><li>2.若没有则看第一段最后是否有总结句。</li><li>3.若没有则自行总结。（合二为一）</li></ul></li><li>特点：它是全文的中心思想，是全文的话题、观点、看法、结论。</li></ul><h3 id="Topic-sentence-每一段的主旨句"><a href="#Topic-sentence-每一段的主旨句" class="headerlink" title="Topic sentence (每一段的主旨句)"></a>Topic sentence (每一段的主旨句)</h3><ul><li><p>特点：</p><ul><li>1.与Topic相关（key words）</li><li>2.支持主旨句</li><li>3.有着语篇标志</li><li>4.拥有三个标准</li><li>5.拥有三种逻辑结构</li></ul></li></ul><h4 id="六种语篇标志"><a href="#六种语篇标志" class="headerlink" title="六种语篇标志"></a>六种语篇标志</h4><p>(一)    三种转承连词/副词</p><ul><li>1)    转折对比</li><li>2)    因果总结</li><li>3)    强调排他</li></ul><p>(二)    表达观点/结论<br>(三)    特殊标点</p><ul><li>1)    ：</li><li>2)    ——</li><li>3)    ”“</li><li>4)    ()</li></ul><p>(四)    情态动词（2.5个）</p><ul><li>1)    Must</li><li>2)    Should</li><li>3)    Need(当应该的时候)</li></ul><p>(五)    特殊结构句型<br>(六)    平铺直叙（首末句，以第一句为主）</p><h4 id="三个标准"><a href="#三个标准" class="headerlink" title="三个标准"></a>三个标准</h4><p>(一)    关联法：主题、主旨、上段主题句<br>(二)    数量法：标志的数量<br>(三)    顺序法：最后一次转承连词出现，标志级别的顺序</p><h4 id="三种逻辑结构"><a href="#三种逻辑结构" class="headerlink" title="三种逻辑结构"></a>三种逻辑结构</h4><p>(一)    重叠性<br>(二)    对立性<br>(三)    互补性</p><h3 id="阅读文章的四大框架"><a href="#阅读文章的四大框架" class="headerlink" title="阅读文章的四大框架"></a>阅读文章的四大框架</h3><p>(一)    描述现象+分析现象+得出结论<br>(二)    提出对象+支持观点or反驳观点or讨论观点+归纳总结<br>(三)    提出问题+分析问题（原因+后果）+解决问题（提出建议方法）<br>(四)    对比对照+分项对比+总体结论</p><h3 id="做题步骤"><a href="#做题步骤" class="headerlink" title="做题步骤"></a>做题步骤</h3><p>(一)    通读开局，把握文章主题主旨（2分钟以内）<br>(二)    浏览题干（选项），文中定位（1-2分钟之间）<br>(三)    程序答题，辨析干扰（15分钟）</p><h2 id="Day2-Selecting-Skills"><a href="#Day2-Selecting-Skills" class="headerlink" title="Day2 Selecting Skills"></a>Day2 Selecting Skills</h2><h3 id="六大题型Testing-items-选择题目"><a href="#六大题型Testing-items-选择题目" class="headerlink" title="六大题型Testing items(选择题目)"></a>六大题型Testing items(选择题目)</h3><p>(一)    步骤</p><ul><li>1.定位有匹配，定位段落</li><li>2.查看中心句</li><li>3.关联主旨</li><li>4.匹配选项</li></ul><p>(二)    步骤</p><ul><li>1.定位无匹配，定位段落</li><li>2.关联上段中心句</li><li>3.寻找下段有无指示代词</li><li>4.理解匹配选项</li></ul><p>(三)    问以下何者正确</p><ul><li>1.第一题：定位在1st+2nd</li><li>2.不是第一题：上题答案之后便是本题出处。</li></ul><p>(四)    作者观点态度</p><ul><li>1.无人认领的观点即为作者的观点</li><li>2.must/should</li><li>3.连词/副词/介词短语观点句子</li><li>4.形式主语的形容词色彩</li></ul><p>(五)    文章大意主旨</p><ul><li>1.主旨句</li><li>2.各段中心句</li><li>3.利用十字交叉法</li><li>4.注意主语宾语</li></ul><p>(六)    定位查找</p><ul><li>1.本题考查词汇量</li><li>2.上下句推理</li><li>3.定位在哪一句答案就在哪一句</li></ul><h3 id="四大干扰选项辨析"><a href="#四大干扰选项辨析" class="headerlink" title="四大干扰选项辨析"></a>四大干扰选项辨析</h3><p>(一)    偷换概念</p><ul><li>1.与原文信息高度相似</li><li>2.替换词或句导致意思变异</li><li>3.增加或减少词句导致意思变异</li><li>4.颠倒因果/条件导致逻辑变异</li><li>排除步骤：<ul><li>1)    why？与原文相似</li><li>2)    where different？</li><li>3)    how？变异× 一致√</li></ul></li></ul><p>(二)    主次混淆</p><ul><li>1.与原文完全一致（照抄原文）</li><li>2.但是只是detail 不是point</li></ul><p>(三)    观念错误</p><ul><li>1.对象不对</li></ul><p>(四)    过度推理</p><ul><li>1.选项中包含比较级或者最高级</li><li>2.极端排他词（only/unless/no one/no one else…）</li></ul><h2 id="Day3-Reading-Tips-Strategies"><a href="#Day3-Reading-Tips-Strategies" class="headerlink" title="Day3 Reading Tips/Strategies"></a>Day3 Reading Tips/Strategies</h2><h3 id="给标题匹配段落"><a href="#给标题匹配段落" class="headerlink" title="给标题匹配段落"></a>给标题匹配段落</h3><ul><li>1.通读文章开局，把握文章主题背景</li><li>2.关联文章主题，准确理解标题</li><li>3.归纳各段的中心，比对选取标题</li></ul><h3 id="段落排序"><a href="#段落排序" class="headerlink" title="段落排序"></a>段落排序</h3><ul><li>1.交叉阅读，把握文章主题和背景<ul><li>两段复现率Topic</li></ul></li><li>2.段落标志/功能，进行大致定位</li><li>3.六种关联证据，段落精准排序<ul><li>1)    在哪找？<br>a)    90%首尾关联<br>b)    10%首首关联平行段落</li><li>2)    找什么关联？<br>a)    指代关联<br>b)    词义关联<br>c)    转承关联<br>d)    数字关联<br>e)    时地关联<br>f)    专有名词关联</li><li>3)    怎么找？<br>a)    指代（指示代词）<br>b)    词义：上下文，同根，同义，原词<br>c)    转承：逻辑<br>d)    数字：计算，顺序<br>e)    时地：点对点，日对日，月对月，年对年，地点归属…<br>f)    专有名词：专有名词是否指的同一对象</li></ul></li></ul><h3 id="信息补全题"><a href="#信息补全题" class="headerlink" title="信息补全题"></a>信息补全题</h3><ul><li>1.通读文章开局，把握文章的主旨背景</li><li>2.上下文推理，确定文中缺失信息的大意<ul><li>1)    归纳中心</li><li>2)    上下句推理</li></ul></li><li>3.关联证据，确定答案</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是根据老师上课整理的，一天的课程其实有很多的东西都需要在后续的练习中去体会，毕竟这是老师根据自己的经验总结的，自己只能作为参考，需要总结的是自己的经验，我这才是最后能把题做对的方法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="英语" scheme="http://yangkunyi.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>排序（数据结构）</title>
    <link href="http://yangkunyi.com/2018/08/23/%E6%8E%92%E5%BA%8F%EF%BC%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%89/"/>
    <id>http://yangkunyi.com/2018/08/23/排序（数据结构）/</id>
    <published>2018-08-23T02:22:23.000Z</published>
    <updated>2018-08-23T02:23:55.566Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>同样是复习总结。</p></blockquote><a id="more"></a><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>概念：就是重新排列列表中的元素，使表中的元素满足按关键字递增或递减的过程。</li><li><p>算法的稳定性：简单来说就是原本列表中的两个相同元素经过排序算法后，如果没有发生位置变化，则称该算法是<strong>稳定</strong>的；反之则<strong>不稳定</strong>。</p><ul><li>注：</li><li>1.算法是否具有稳定性并不能衡量一个算法的优劣，它主要是对算法的性质进行描述。</li><li>2.对于不稳定的排序算法，只需举出一组关键字的实例，说明它的不稳定性即可。</li></ul></li><li><p>排序根据数据元素是否完全在内存中，可分为<strong>内部排序</strong>和<strong>外部排序</strong>。</p><ul><li>内部排序：在排序期间元素全部存放在内存中的排序。</li><li>外部排序：在排序期间元素无法全部同时存放在内存中，必须在排序过程中根据要求不断地在内、外存之间移动的排序。</li></ul></li></ul><blockquote><p>在今天只是对内部排序进行复习。</p></blockquote><ul><li>内部排序的操作：比较和移动。（并不是所有的内部排序算法都要基于比较，例如：基数排序）</li><li>内部排序算法的性能却决于算法的<strong>时间复杂度</strong>和<strong>空间复杂度</strong>，而时间复杂度一般是由移动的次数来决定的。</li></ul><h2 id="直接插入排序（插入排序）"><a href="#直接插入排序（插入排序）" class="headerlink" title="直接插入排序（插入排序）"></a>直接插入排序（插入排序）</h2><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//直接插入排序</div><div class="line">void InsertSort(ElemType A[],int n)&#123;</div><div class="line">    int i,j;</div><div class="line">    for(i=2;i&lt;=n;i++)&#123;                           //依次将A[2]~A[n]插入到前面已排序序列</div><div class="line">        if(A[i].key&lt;A[i-1].key)&#123;                 //若A[i]的关键码小于其前驱，需将A[i]插入有序表</div><div class="line">            A[0]=A[i];                           //复制为哨兵，A[0]不存放元素</div><div class="line">            for(j=i-1;A[0].key&lt;A[j].key;--j)&#123;    //从后往前查找待插入位置</div><div class="line">                A[j+1]=A[j];                     //向后挪位</div><div class="line">            &#125;</div><div class="line">            A[j+1]=A[0];                         //复制到插入位置</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>稳定</strong></li><li>适用性：<strong>顺序储存和链式储存</strong></li></ul><h2 id="折半插入排序（插入排序）"><a href="#折半插入排序（插入排序）" class="headerlink" title="折半插入排序（插入排序）"></a>折半插入排序（插入排序）</h2><h3 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">//折半插入排序</div><div class="line">void InsertSort(ElemType A[],int n)&#123;</div><div class="line">    int i,j,low,high,mid;</div><div class="line">    for(i=2;i&lt;=n;i++)&#123;                          //依次将A[2]~A[n]插入到前面已排序序列</div><div class="line">        A[0] = A[i];                            //将A[i]暂存到A[0]</div><div class="line">        low = 1;</div><div class="line">        high = i - 1;                           //设置折半查找的范围</div><div class="line">        while(low&lt;=high)&#123;                       //折半查找（默认递增序列）</div><div class="line">            mid = (low + high) / 2;             //取中间点</div><div class="line">            if(A[mid].key&gt;A[0].key)&#123;            //查找左半子表         </div><div class="line">                high = mid - 1;</div><div class="line">            &#125;</div><div class="line">            else low = mid + 1;                 //查找右半子表</div><div class="line">        &#125;</div><div class="line">        for(j=i-1;j&gt;=high+1;--i)&#123;</div><div class="line">            A[j+1]=A[j];                        //统一后移元素，空出插入位置</div><div class="line">        &#125;</div><div class="line">        A[high+1] = A[0];                       //插入操作</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-1"><a href="#性能分析-1" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="希尔排序（插入排序）"><a href="#希尔排序（插入排序）" class="headerlink" title="希尔排序（插入排序）"></a>希尔排序（插入排序）</h2><h3 id="算法-2"><a href="#算法-2" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//希尔排序</div><div class="line">void ShellSort(ElemType A[],int n)&#123;</div><div class="line">    //对顺序表作写入插入排序，本算法和直接插入排序相比，做了以下修改：</div><div class="line">    //1.券后记录位置的增量是dk，不是1</div><div class="line">    //2.r[0]只是暂存单元，不是哨兵，当j&lt;=0时，插入位置已到</div><div class="line">    for(dk=n/2;dk&gt;=1;dk=dk/2)&#123;                  //步长变化</div><div class="line">        for(i=dk+1;i&lt;=n;kd=dk/2)&#123;</div><div class="line">            if(A[i].key&lt;A[i-dk].key)&#123;           //需将A[i]插入有序增量子表</div><div class="line">                A[0] = A[i];                    //暂存在A[0]</div><div class="line">                for(j=i-dk;j&gt;0&amp;&amp;A[0].key&lt;A[j].key;j-=dk)&#123;</div><div class="line">                    A[j+dk] = A[j];</div><div class="line">                &#125;</div><div class="line">                A[j+dk] = A[j];</div><div class="line">            &#125;//if</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-2"><a href="#性能分析-2" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>不稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="冒泡排序（交换排序）"><a href="#冒泡排序（交换排序）" class="headerlink" title="冒泡排序（交换排序）"></a>冒泡排序（交换排序）</h2><h3 id="算法-3"><a href="#算法-3" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//冒泡排序</div><div class="line">void BubbleSort(ElemType A[],int n)&#123;</div><div class="line">    for(i=0;i&lt;n-1;i++)&#123;</div><div class="line">        flag = false;</div><div class="line">        for(j=n-1;j&gt;i;j--)&#123;</div><div class="line">            if(A[j-1].key&gt;A[j].key)&#123;</div><div class="line">                swap(A[j-1],A[j]);</div><div class="line">                flag = true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(flag==false)&#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-3"><a href="#性能分析-3" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>稳定</strong></li><li>适用性：<strong>顺序储存</strong></li><li>特点：每一趟排序都会将一个元素放置到其最终的位置上。</li></ul><h2 id="快速排序（交换排序）"><a href="#快速排序（交换排序）" class="headerlink" title="快速排序（交换排序）"></a>快速排序（交换排序）</h2><h3 id="算法-4"><a href="#算法-4" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//快速排序</div><div class="line">void QuickSort(Element A[],int low;int high)&#123;</div><div class="line">    if(low&lt;high)&#123;</div><div class="line">        int pivotpos = Partition(A,low,high);    //划分</div><div class="line">        QuickSort(A,low,pivotpos-1);             //依次对两个子表进行递归排序</div><div class="line">        QuickSort(A,pivotpos-1,high);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//快速排序中的一分二为操作</div><div class="line">int Partition(ElemType A[],int low,int high)&#123;</div><div class="line">    //一趟排序过程</div><div class="line">    ElemType  pivot = A[low];                    //将当前表中第一个元素设为枢轴值，对表进行划分</div><div class="line">    while(low&lt;high)&#123;                             //跳出循环</div><div class="line">        while(low&lt;high&amp;&amp;A[high]&gt;=pivot)&#123;</div><div class="line">            --high;</div><div class="line">        &#125;</div><div class="line">        A[low] = A[high];                        //将比枢轴值小的元素移动到左边</div><div class="line">        while(low&lt;high&amp;&amp;A[low]&lt;=pivot)&#123;</div><div class="line">            ++low;</div><div class="line">        &#125;</div><div class="line">        A[high] = A[low];                        //将比枢轴值大的元素移动到右边</div><div class="line">    &#125;</div><div class="line">    A[low] = pivot;                              //枢轴值元素存放到最终位置</div><div class="line">    return low;                                  //返回存放数轴的最终位置</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-4"><a href="#性能分析-4" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：最坏情况<code>O(n)</code>；平均情况<code>O(log2n)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>不稳定</strong></li><li>适用性：<strong>顺序储存</strong></li><li>特点：每一趟排序都会将一个元素放置到其最终的位置上。</li></ul><h2 id="简单选择排序（选择排序）"><a href="#简单选择排序（选择排序）" class="headerlink" title="简单选择排序（选择排序）"></a>简单选择排序（选择排序）</h2><h3 id="算法-5"><a href="#算法-5" class="headerlink" title="算法"></a>算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//简单选择排序</div><div class="line">void SelectSort(ElemType A[],int n)&#123;</div><div class="line">    //对表A作简单选择排序，A[]从0开始存放元素</div><div class="line">    For(i=0,i&lt;n-1;i++)&#123;                         //一共进行n-1趟</div><div class="line">        min = i;                                //记录最小元素位置</div><div class="line">        for(j=i+1;j&lt;n;j++)                      //在A[1···n-1]中选择最小的元素</div><div class="line">            if(A[j]&lt;A[min])</div><div class="line">                min = j;</div><div class="line">        if(min!=i)</div><div class="line">            swap(A[i],A[min]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-5"><a href="#性能分析-5" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(n²)</code></li><li>稳定性：<strong>不稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="堆排序（选择排序）"><a href="#堆排序（选择排序）" class="headerlink" title="堆排序（选择排序）"></a>堆排序（选择排序）</h2><ul><li>这是一种树形选择排序方法，特点：子啊排序过程中，将L[1…n]看成是一棵完全二叉树的顺序储存结构，利用完全二叉树中双亲结点和孩子节点之间的内在关系，在当前无序区中选择关键字最大（或最小）的元素。</li><li>小根堆（小定堆）</li><li>大根堆（大定堆）</li></ul><h3 id="建立大根堆的算法"><a href="#建立大根堆的算法" class="headerlink" title="建立大根堆的算法"></a>建立大根堆的算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//建立大根堆</div><div class="line">void BuildMaxHeap(ElemType A[],int len)&#123;</div><div class="line">    for(int i=len/2;i&gt;0;i--)&#123;                     //从i=[n/2]~1,反复调整堆</div><div class="line">        AdjustDown(A,i,len);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="向下调整算法"><a href="#向下调整算法" class="headerlink" title="向下调整算法"></a>向下调整算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//向下调整算法</div><div class="line">void AdjustDown(ElemType A[],int k,int len)&#123;</div><div class="line">    A[0] = A[k];                                  //A[0]暂存</div><div class="line">    for(i=2*k;i&lt;=len;i*=2)&#123;                       //沿key较大的子结点向下筛选</div><div class="line">        if(i&lt;len&amp;&amp;A[i]&lt;A[i+1])</div><div class="line">            i++;                                  //取key值较大的子结点的下标</div><div class="line">        if(A[0]&gt;=A[i])</div><div class="line">            break;                                //筛选结束</div><div class="line">        else&#123;</div><div class="line">            A[k] = A[i];                          //将A[i]调整到双亲结点上</div><div class="line">            k = i;                                //修改k值，以便继续向下筛选</div><div class="line">        &#125;</div><div class="line">    &#125;//for</div><div class="line">    A[k] = A[0];                                  //被筛选结点的值放入最终位置</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="向上调整算法"><a href="#向上调整算法" class="headerlink" title="向上调整算法"></a>向上调整算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//向上调整算法</div><div class="line">void AdjustUp(ElemType A[],int k)&#123;</div><div class="line">    A[0] = A[k];</div><div class="line">    int i = k/2;                                  //若结点值大于双亲结点，则将双亲结点向下调，并继续向上比较</div><div class="line">    while(i&gt;0&amp;&amp;A[i]&lt;A[0])&#123;                        //循环跳出条件</div><div class="line">        A[k] = A[i];                              //双亲结点下调</div><div class="line">        k = i;</div><div class="line">        i = k/2;                                  //继续向上比较</div><div class="line">    &#125;//while</div><div class="line">    A[k] = A[0];                                  //复制到最终位置</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="堆排序的算法"><a href="#堆排序的算法" class="headerlink" title="堆排序的算法"></a>堆排序的算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 堆排序算法</div><div class="line">void HeapSort(ElemType A[],int len)&#123;</div><div class="line">    BuildMaxHeap(A,len);                          //初始创建</div><div class="line">    for(i=len;i&gt;1;i--)&#123;                           //n-1趟的交换和建堆过程</div><div class="line">        swap(A[i],A[1]);                          //输出堆顶元素（和堆低元素交换）</div><div class="line">        AdjustDown(A,1,i-1);                      //整理，把剩余的i-1个元素整理成堆</div><div class="line">    &#125;//for</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-6"><a href="#性能分析-6" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(1)</code></li><li>时间效率：<code>O(nlog2n)</code></li><li>稳定性：<strong>不稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><h3 id="Merge算法"><a href="#Merge算法" class="headerlink" title="Merge算法"></a>Merge算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//Merge函数</div><div class="line">ElemType *B = (ElemType *)malloc((n + 1) * sizeof(ElemType));      //辅助数组B</div><div class="line">void Merge(ElemType A[],int low,int mid,int high)&#123;</div><div class="line">    //表A的两段各自有序，将它们合成一个有序表</div><div class="line">    for(int k=low;k&lt;=high;k++)&#123;</div><div class="line">        B[k] = A[k];                              //将A中所有元素复制到B中</div><div class="line">    &#125;</div><div class="line">    for(i=low,j=mid+1,k=i;i&lt;=mid&amp;&amp;j&lt;=high;k++)&#123;</div><div class="line">        if(B[i]&lt;=b[j])                            //比较B的左右两段中的元素</div><div class="line">            A[k] = B[i++];                        //将较小值复制到A中</div><div class="line">        else</div><div class="line">            A[k] = B[j++];</div><div class="line">    &#125;//for</div><div class="line">    while(j&lt;=mid)</div><div class="line">        A[k++] = B[i++];                          //若第一个表未检测完，复制</div><div class="line">    while(j&lt;=high)</div><div class="line">        A[k++] = B[j++];                          //若第二个表未检测完，复制</div><div class="line">&#125;//注：这里最后的两个while循环只有一个会执行</div></pre></td></tr></table></figure><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//排序算法（2路）</div><div class="line">void MergeSort(ElemType A[],int low,int high)&#123;</div><div class="line">    if(low&lt;high)&#123;</div><div class="line">        int mid = (low + high)/2;                 //从中间划分两个子序列 </div><div class="line">        MergeSort(A,low,high);                    //对左侧子序列进行递归排序</div><div class="line">        MergeSort(A,mid+1,high);                  //对右侧子序列进行递归排序</div><div class="line">        Merge(A,low,mig,high);                    //归并</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="性能分析-7"><a href="#性能分析-7" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(n)</code></li><li>时间效率：<code>O(nlog2n)</code></li><li>稳定性：<strong>稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h3 id="性能分析-8"><a href="#性能分析-8" class="headerlink" title="性能分析"></a>性能分析</h3><ul><li>空间效率：<code>O(r)</code>（r是队列的个数）</li><li>时间效率：<code>O(d(n+r))</code>（特点：跟序列的初始状态无关）</li><li>稳定性：<strong>稳定</strong></li><li>适用性：<strong>顺序储存</strong></li></ul><h2 id="各种排序的比较及应用"><a href="#各种排序的比较及应用" class="headerlink" title="各种排序的比较及应用"></a>各种排序的比较及应用</h2><h3 id="各种排序算法的性质"><a href="#各种排序算法的性质" class="headerlink" title="各种排序算法的性质"></a>各种排序算法的性质</h3><table><br>        <tr><br>            <td rowspan="2">算法种类</td><br>            <td colspan="3">时间复杂度</td><br>            <td rowspan="2">空间复杂度</td><br>            <td rowspan="2">是否稳定</td><br>        </tr><br>        <tr><br>            <td>最好情况</td><br>            <td>平均情况</td><br>            <td>最坏情况</td><br>        </tr><br>        <tr><br>            <td>直接插入排序</td><br>            <td>O(n)</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(1)</td><br>            <td>是</td><br>        </tr><br>        <tr><br>            <td>冒泡排序</td><br>            <td>O(n)</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(1)</td><br>            <td>是</td><br>        </tr><br>        <tr><br>            <td>简单选择排序</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(1)</td><br>            <td>否</td><br>        </tr><br>        <tr><br>            <td>希尔排序</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(n²)</td><br>            <td>O(1)</td><br>            <td>否</td><br>        </tr><br>        <tr><br>            <td>快速排序</td><br>            <td>O(nlog2n)</td><br>            <td>O(nlog2n)</td><br>            <td>O(n²)</td><br>            <td>O(log2n)</td><br>            <td>否</td><br>        </tr><br>        <tr><br>            <td>堆排序</td><br>            <td>O(nlog2n)</td><br>            <td>O(nlog2n)</td><br>            <td>O(nlog2n)</td><br>            <td>O(1)</td><br>            <td>否</td><br>        </tr><br>        <tr><br>            <td>2-路归并排序</td><br>            <td>O(nlog2n)</td><br>            <td>O(nlog2n)</td><br>            <td>O(nlog2n)</td><br>            <td>O(n)</td><br>            <td>是</td><br>        </tr><br>        <tr><br>            <td>基数排序</td><br>            <td>O(d(n+r))</td><br>            <td>O(d(n+r))</td><br>            <td>O(d(n+r))</td><br>            <td>O(r)</td><br>            <td>是</td><br>        </tr><br>    </table><h3 id="排序算法的应用"><a href="#排序算法的应用" class="headerlink" title="排序算法的应用"></a>排序算法的应用</h3><h4 id="（1）选取排序方法需要考虑的因素："><a href="#（1）选取排序方法需要考虑的因素：" class="headerlink" title="（1）选取排序方法需要考虑的因素："></a>（1）选取排序方法需要考虑的因素：</h4><ul><li>待排序的元素数目n</li><li>元素本身信息量的大小</li><li>关键自结构及其分布情况</li><li>稳定性的要求</li><li>语言工具的条件，存储结构及辅助空间的大小</li></ul><h4 id="（2）排序算法小结："><a href="#（2）排序算法小结：" class="headerlink" title="（2）排序算法小结："></a>（2）排序算法小结：</h4><ul><li>若n（n&lt;=50）较小，则可以采用<strong>直接插入排序</strong>和<strong>简单选择排序</strong>。当记录本身信息量较大的时候，用<strong>简单选择排序较好</strong>。</li><li>若文件的初始状态已关键字基本有序，则选用<strong>直接插入</strong>或<strong>冒泡排序</strong>为宜。</li><li><p>若n较大，则采用时间复杂度为<code>O(nlog2n)</code>的排序方法：<strong>快速排序、堆排序、归并排序</strong>。</p><ul><li>快速排序被认为是目前基于比骄傲的每部排序法中最好的方法。（不稳定）</li><li>堆排序所需的辅助空间少于快速排序，并且不会出现快速排序可能出现的最坏情况。（稳定）</li><li>当追求稳定时，可以采用归并排序。但通常不提倡2-路归并，而是将它和直接插入排序结合在一起使用。直接插入排序是稳定的，因此改进后的归并排序仍是稳定的。</li></ul></li><li><p>当文件的n个关键字随机分布时，任何借助“比较”的排序算法，至少需要<code>O(nlog2n)</code>的时间。</p></li><li>当n很大，记录的关键字位数较少且可以分解时，采用基数排序较好。</li><li>当记录本身信息量较大时，为避免耗费大量时间移动记录，可用链表作为存储结构。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;同样是复习总结。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="复习" scheme="http://yangkunyi.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="数据结构" scheme="http://yangkunyi.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="博客" scheme="http://yangkunyi.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>查找（数据结构）</title>
    <link href="http://yangkunyi.com/2018/08/21/%E6%9F%A5%E6%89%BE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%89/"/>
    <id>http://yangkunyi.com/2018/08/21/查找（数据结构）/</id>
    <published>2018-08-21T08:27:36.000Z</published>
    <updated>2018-08-21T08:30:27.071Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今天数据结构复习到查找部分，正好将这一部分初步整理出来，以便之后学习的时候参考复习。</p></blockquote><a id="more"></a><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>查找：在数据集合中寻找满足某种条件的数据元素的过程。</li><li><p>查找结果：</p><ul><li>查找成功</li><li>查找失败</li></ul></li><li><p><strong>查找表：用于查找数据集合。</strong><br>查找表的操作：</p><ul><li>1.查找是否存在某个特定元素（静态）</li><li>2.检索满足条件的某个特定元素的属性（静态）</li><li>3.在查找表中删除一个数据元素（动态）</li><li>4.在查找表中插入一个数据元素（动态）</li></ul></li><li>动态：二叉排序树的查找；散列查找；</li><li><p>静态：顺序查找；折半查找；散列查找；</p></li><li><p>关键字：数据元素中唯一标识该元素的某个数据项的值。</p></li><li>平均查找长度：是衡量查找算法效率的最主要指标。</li></ul><h2 id="1-顺序查找（线性查找）"><a href="#1-顺序查找（线性查找）" class="headerlink" title="1.顺序查找（线性查找）"></a>1.顺序查找（线性查找）</h2><h3 id="1）一般线性表的顺序查找（无序）"><a href="#1）一般线性表的顺序查找（无序）" class="headerlink" title="1）一般线性表的顺序查找（无序）"></a>1）一般线性表的顺序查找（无序）</h3><ul><li>算法：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 顺序查找</div><div class="line">typedef struct&#123;                      //查找表的顺序结构</div><div class="line">    ElemType *elem;                  //元素储存空间地址，建表时按实际长度分配，0号单元留空（哨兵）</div><div class="line">    int TableLen;                    //表的长度</div><div class="line">&#125;SSTable;</div><div class="line">int Search_seq(SSTable ST,ElemType key)&#123;</div><div class="line">    //在顺序表ST中顺序查找关键字为key的元素，若找到则返回元素在表中的位置</div><div class="line">    ST.elem[0] = key;                //&quot;哨兵&quot;</div><div class="line">    for(i=ST.TableLen;ST.elem[i]!=key;i--)  ;   //从后往前找</div><div class="line">    return i;                        //若表中不存在关键字为key的元素，将查找到i为0时退出for循环</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>缺点：当n较大的时，平均查找长度较大，效率低；</li><li>优点：对数据元素的存储没有要求，顺序存储或链式存储皆可；对表中记录的有序性也没有要求，无论记录是否按照关键码有序均可应用。</li><li><strong>平均查找长度：(n+1)/2</strong></li></ul><p><strong><em>注意：对线性的链表只能进行顺序查找。</em></strong></p><h3 id="2）有序表的顺序查找"><a href="#2）有序表的顺序查找" class="headerlink" title="2）有序表的顺序查找"></a>2）有序表的顺序查找</h3><ul><li>查找失败可以不再找到表的另一端，能降低顺序查找失败的平均查找长度。</li><li>查找平均长度：<ul><li>成功：(n+1)/2</li><li>失败：n/2+n/(n+1)</li></ul></li></ul><h2 id="2-折半查找（二分查找）"><a href="#2-折半查找（二分查找）" class="headerlink" title="2.折半查找（二分查找）"></a>2.折半查找（二分查找）</h2><ul><li>算法：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//二分查找</div><div class="line">int Binary_Search(SeqList L,ElemType key)&#123;</div><div class="line">    //在有序表L中查找关键字为key的元素，若存在则返回其位置，不存在则返回-1</div><div class="line">    int low = 0,hight = L.TableLen-1,mid;</div><div class="line">    while(low&lt;=high)&#123;</div><div class="line">        mid = (low + high)/2;        //取中间位置</div><div class="line">        if(L.elem[mid] == key)</div><div class="line">            return mid;              //查找成功则返回所在位置</div><div class="line">        else if(L.elem[mid]&gt;key)</div><div class="line">            high = mid - 1;          //从前半部分继续查找</div><div class="line">        else</div><div class="line">            low = mid + 1;           //从后半部分继续查找</div><div class="line">    &#125;</div><div class="line">    return -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li><strong>判定树（计算成功和不成功的平查找长度）</strong></li></ul><h2 id="3-分块查找（索引顺序查找）"><a href="#3-分块查找（索引顺序查找）" class="headerlink" title="3.分块查找（索引顺序查找）"></a>3.分块查找（索引顺序查找）</h2><ul><li>块内的元素可以无序，但块之间是有序的。</li><li>步骤：<ul><li>1.在索引表中确定待查记录所在的块，可以顺序查找或折半查找索引表</li><li>2.在块内顺序查找</li></ul></li></ul><h2 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h2><ul><li>散列函数：一个把查找表中的关键字映射成该关键字对应的地址的函数，记为<code>Hash(key)=Addr</code>。（的地址可以是数组下标、索引、或内存地址等）</li><li>冲突：散列函数可能会把两个以上的不同关键字映射到同一地址</li><li>同义词：发生冲突的不同关键字</li><li>散列表：是根据关键字而直接进行访问的数据结构</li><li>对散列表进行查找的时间复杂度为O(1)</li></ul><h3 id="散列函数的构造方法"><a href="#散列函数的构造方法" class="headerlink" title="散列函数的构造方法"></a>散列函数的构造方法</h3><ul><li>注意:<ul><li>1.散列函数的定义域必须包含全部需要储存的关键字，而值域的范围则依赖于散列函数表的大小或地址范围</li><li>2.散列函数计算出来的地址应该能等概率、均匀地分布在整个地址空间，从而减少冲突的发生</li><li>3.散列函数应尽量简单，能够在较短的时间内就计算出任一关键字对应的散列地址</li><li>4.实际的选择中，采用何种构造散列函数的方法取决于关键字集合的情况，但是目标是为了使产生的冲突的可能性尽量的降低</li></ul></li></ul><h4 id="（1）直接定址法"><a href="#（1）直接定址法" class="headerlink" title="（1）直接定址法"></a>（1）直接定址法</h4><ul><li>直接取关键字的某个函数值为散列地址，散列函数为：<code>H(key)=a×key+b</code>。这种方法计算简单，并且不会产生冲突。</li><li>它适合关键字的分布基本连续的情况，若关键字分布不连续，空位较多，将造成储存空间的浪费。</li></ul><h4 id="（2）除留余数法"><a href="#（2）除留余数法" class="headerlink" title="（2）除留余数法"></a>（2）除留余数法</h4><ul><li>这是一种最简单、最常用的方法，假定散列表表长为m，出下一个不大于m但最接近或等于m的质数p，利用<code>H(key)=key%p</code>的公式把关键字转换成散列地址。</li><li>该方法关键的是选好p，使得每一个关键字通过函数转换后等概率地映射到散列空间上的任一地址，从而尽可能减少冲突的可能性。</li></ul><h4 id="（3）数字分析法"><a href="#（3）数字分析法" class="headerlink" title="（3）数字分析法"></a>（3）数字分析法</h4><ul><li>设关键字是r进制数（如十进制），而r个数码在各位上出现的频率不一定相同，可能在某些位上分布均匀些，每种数码出现的机会均等；而在某些位上分布不均匀，只有某几处数码经常出现，则应选数码分布较为均匀的若干位作为散列地址。</li><li>这种方法适合于已知的关键字集合，如果更换了关键字，就需要重新构造新的散列函数。</li></ul><h4 id="（4）平方取中法"><a href="#（4）平方取中法" class="headerlink" title="（4）平方取中法"></a>（4）平方取中法</h4><ul><li>顾名思义，取关键字的平方值的中间几位作为散列地址。具体多少位要看实际情况而定。这种方法取到的散列地址和关键字的每一位都有关系，使得散列地址分布布较均匀。</li><li>适用于关键字的每一位取值都不够均匀或均小于散列地址所需的函数。</li></ul><p>####（5）折叠法</p><ul><li>将关键字分割成位数相同的及部分（最后一部分的位数可以短一些），然后取这几部分的折叠和作为散列地址。</li><li>关键字位数很多，而且关键字中每一位上数字分布大致均匀时，可以采用折叠法得到散列地址。</li></ul><p>####（6）随机数法</p><ul><li>选择一随机函数，取关键字的随机值作为散列地址。</li><li>通常用于关键字长度不同的场合。</li></ul><h3 id="处理冲突的方法"><a href="#处理冲突的方法" class="headerlink" title="处理冲突的方法"></a>处理冲突的方法</h3><blockquote><p>任何设计出来的散列函数都不可能绝对地避免冲突，为此，必须考虑在发生冲突时应该如何进行处理，即为产生冲突的关键字寻找下一个“空”的Hash地址。</p></blockquote><h4 id="（1）开放定址法"><a href="#（1）开放定址法" class="headerlink" title="（1）开放定址法"></a>（1）开放定址法</h4><ul><li>可存放新表项的空闲地址既向它的同义词表现开放，又向它的非同义词表项开放。</li></ul><h5 id="A-线性探测法"><a href="#A-线性探测法" class="headerlink" title="A.线性探测法"></a>A.线性探测法</h5><ul><li>冲突发生时，顺序表查看表中下一个单元（当探测到表尾m-1时，下一个探测地址是表首地址0），直到找出一个空闲单元（当表未填满时一定能找到一个空闲单元）或查遍全表。</li><li>缺点：可能时第i个散列地址的同义词存入第i+1个散列地址，这样本应存入第i+1个散列地址的元素就争夺第i+2个散列地址的元素的地址……，从而在成大量元素的响铃的散列地址上“聚集”（或堆积）起来，大大降低了查找效率。</li></ul><h5 id="B-平方探测法（二次探测法）"><a href="#B-平方探测法（二次探测法）" class="headerlink" title="B.平方探测法（二次探测法）"></a>B.平方探测法（二次探测法）</h5><ul><li>这是一种较好的处理冲突的方法，可以避免出现“堆积”问题，它的缺点是不能探测到散列表上的所有单元，但至少探测到一半的单元。</li></ul><h5 id="C-再散列法（双散列法）"><a href="#C-再散列法（双散列法）" class="headerlink" title="C.再散列法（双散列法）"></a>C.再散列法（双散列法）</h5><ul><li>需要两个散列函数，当通过第一个散列函数H(key)得到的地址发生冲突时，则利用第二个散列函数<code>Hash2(key)=&gt;[H=(H(key)+i*Hash2(key))%m]</code>计算该关键字的地址增量。</li></ul><h5 id="D-伪随机序列法"><a href="#D-伪随机序列法" class="headerlink" title="D.伪随机序列法"></a>D.伪随机序列法</h5><ul><li>利用伪随机数序列</li></ul><h4 id="（2）拉链法"><a href="#（2）拉链法" class="headerlink" title="（2）拉链法"></a>（2）拉链法</h4><ul><li>为了避免非同义词发生冲突，可以把所有的同义词储存在一个线性链表中，这个线性链表由其散列地址唯一标识。</li><li>适用于经常进行插入和删除的情况。</li></ul><h3 id="散列的查找和性能分析"><a href="#散列的查找和性能分析" class="headerlink" title="散列的查找和性能分析"></a>散列的查找和性能分析</h3><ul><li>查找与构造方式基本一致。</li><li>散列表的查找效率取决于三个因素：散列函数、处理冲突的方式和填装因子。</li><li><strong>填装因子：</strong><code>α=表中记录数n/散列表长度m</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;今天数据结构复习到查找部分，正好将这一部分初步整理出来，以便之后学习的时候参考复习。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="复习" scheme="http://yangkunyi.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="数据结构" scheme="http://yangkunyi.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="博客" scheme="http://yangkunyi.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>斐波那契数列学习</title>
    <link href="http://yangkunyi.com/2018/07/25/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yangkunyi.com/2018/07/25/斐波那契数列学习/</id>
    <published>2018-07-25T13:50:38.000Z</published>
    <updated>2018-07-25T13:52:05.222Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>复习过程中涉及到计算算法的时间复杂度，课后例题中的“计算斐波那契数列时间复杂度”引起了自己的思考，通过学习，总结出好集中不同的方式。</p></blockquote><a id="more"></a><h2 id="斐波那契数列简介"><a href="#斐波那契数列简介" class="headerlink" title="斐波那契数列简介"></a>斐波那契数列简介</h2><blockquote><p>斐波那契数列（意大利语：Successione di Fibonacci），又译为菲波拿契数列、菲波那西数列、斐波那契数列、黄金分割数列。<br>在数学上，费波那契数列是以递归的方法来定义：</p></blockquote><ul><li>F[0] = 0</li><li>F[1] = 0</li><li>F[n] = F[n-1] + F<a href="n&gt;=2">n-2</a></li></ul><blockquote><p>用文字来说，就是费波那契数列由0和1开始，之后的费波那契系数就是由之前的两数相加而得出。首几个费波那契系数是：</p></blockquote><ul><li>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233……</li></ul><blockquote><p>特别指出：0不是第一项，而是第零项。</p></blockquote><h2 id="计算方法"><a href="#计算方法" class="headerlink" title="计算方法"></a>计算方法</h2><h4 id="递归法"><a href="#递归法" class="headerlink" title="递归法"></a>递归法</h4><p>递归计算斐波那契数列的JavaScript如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function Fibonacci1(n)&#123;</div><div class="line">    if(n==0)</div><div class="line">        return 0;</div><div class="line">    if(n==1)</div><div class="line">        return 1;</div><div class="line">    return Fibonacci1(n-1) + Fibonacci1(n-2);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>递归的方法很简单，但是显然十分显然存在大量的重复运算，效率低下很低，还会占用大量的内存。</p><ul><li>时间复杂度：T(n) = O(2^n)</li></ul><h4 id="递推法"><a href="#递推法" class="headerlink" title="递推法"></a>递推法</h4><p>为了避免递归的低效率，我们可以采取累加的方式，一项一项的计算，JavaScript代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function Fibonacci2(n)&#123;</div><div class="line">    a = 0;</div><div class="line">    b = 1;</div><div class="line">    if(n==0)</div><div class="line">        return a;</div><div class="line">    for(i = 1;i &lt;= n;i++)&#123;</div><div class="line">        c = a + b;</div><div class="line">        a = b;</div><div class="line">        b = c;</div><div class="line">    &#125;</div><div class="line">    return c;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>时间复杂度：T(n) = O(n)</li><li>空间复杂度：O(n)</li></ul><h4 id="公式法"><a href="#公式法" class="headerlink" title="公式法"></a>公式法</h4><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p>以下是斐波那契数列的常见递推公式：</p><p>$$ F_{n}=\dfrac {1}{\sqrt {5}}\times \left[ \left( \dfrac {1+\sqrt {5}}{2}\right) ^{n}-\left( \dfrac {1-\sqrt {5}}{2}\right) ^{n}\right] $$</p><p>公式法的JavaScript代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">function Fibonacci3(n)&#123;</div><div class="line">    root_five = sqrt(5);</div><div class="line">    f1=f2=1;</div><div class="line">    for(i=1;i&lt;=n;i++)&#123;</div><div class="line">        f1 *= (1+root_five)/2;</div><div class="line">        f2 *= (1-root_five)/2;</div><div class="line">    &#125;</div><div class="line">    result = (f1 - f2)/root_five;</div><div class="line">    return int(result);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>虽然公式看起来不是很复杂，但是当中有很多的浮点运算，返回的结果也会因为n越来越大而不断产生更大的误差，因此并不可靠。</p><h4 id="矩阵法"><a href="#矩阵法" class="headerlink" title="矩阵法"></a>矩阵法</h4><p>$$ \begin{bmatrix} F<em>{n} \ F</em>{n-1} \end{bmatrix}=\begin{bmatrix} F<em>{n-1}+F</em>{n-2} \ F<em>{n-1} \end{bmatrix}=\begin{bmatrix} 1\times f</em>{n-1}+1\times F<em>{n}-2 \ 1\times f</em>{n-1}+0\times F_{n-2} \end{bmatrix}=\begin{bmatrix}<br>1 &amp; 1 \<br>1 &amp; 0<br>\end{bmatrix} $$</p><p>由此可推得：</p><p>$$ \begin{bmatrix} F<em>{n} \ F</em>{n-1} \end{bmatrix}=\begin{bmatrix} 1 &amp; 1 \ 1 &amp; 0 \end{bmatrix}^{n-1}\times \begin{bmatrix} F<em>{1} \ F</em>{0} \end{bmatrix}=\begin{bmatrix} 1 &amp; 1 \ 1 &amp; 0 \end{bmatrix}^{n-1}\times \begin{bmatrix} 1 \ 0 \end{bmatrix} $$</p><p>那这里就把问题转换为了求矩阵的n-1次幂，利用快速幂的方式来计算：</p><p>$$ a_{n}=\begin{cases}a^{\dfrac {n}{2}}a^{\dfrac {n}{2}},ifniseven\ a^{\dfrac {n-1}{2}}a^{\dfrac {n-1}{2}}a,ifnisodd\end{cases} $$</p><p>以上方法的JavaScript代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">// 矩阵乘法</div><div class="line">function multiMatrix(int[][] m1,int[][] m2) &#123;</div><div class="line">//参数判断什么的就不给了，如果矩阵是n*m和m*p,那结果是n*p</div><div class="line">    int[][] res = new int[m1.length][m2[0].length];</div><div class="line">    for (int i = 0; i &lt; m1.length; i++) &#123;</div><div class="line">        for (int j = 0; j &lt; m2[0].length; j++) &#123;</div><div class="line">            for (int k = 0; k &lt; m2.length; k++) &#123;</div><div class="line">                res[i][j] += m1[i][k] * m2[k][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line">// 矩阵快速幂</div><div class="line">function Fibonacci4(int n) &#123;</div><div class="line">    if (n &lt; 1) &#123;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    if (n == 1 || n == 2) &#123; </div><div class="line">        return 1;</div><div class="line">    &#125;</div><div class="line">    //底</div><div class="line">    int[][] base = &#123;&#123;1,1&#125;,</div><div class="line">                    &#123;1,0&#125;&#125;;</div><div class="line">    //求底为base矩阵的n-2次幂</div><div class="line">    int[][] res = matrixPower(base, n - 2);</div><div class="line">    //根据[f(n),f(n-1)] = [1,1] * &#123;[1,1],[1,0]&#125;^(n-2)，f(n)就是</div><div class="line">    //1*res[0][0] + 1*res[1][0]</div><div class="line">    return res[0][0] + res[1][0];</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>时间复杂度：T(n) = O(log(n)) </li></ul><blockquote><p>今天的学习过程中并不是全部都理解透彻了，关于时间复杂度也还有更长的路去学习，本文仅关于一道课后题延伸出这些内容。<br>未完待续~~~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;复习过程中涉及到计算算法的时间复杂度，课后例题中的“计算斐波那契数列时间复杂度”引起了自己的思考，通过学习，总结出好集中不同的方式。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构" scheme="http://yangkunyi.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>NodePPT</title>
    <link href="http://yangkunyi.com/2018/04/11/NodePPT/"/>
    <id>http://yangkunyi.com/2018/04/11/NodePPT/</id>
    <published>2018-04-11T06:38:20.000Z</published>
    <updated>2018-04-11T06:40:45.521Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用了好几次这个ppt，自己确实觉得这是用过的ppt中最简洁，B格最高的ppt，但是每次做都要去看原文档，十分的不方便，因此自己写一篇文章，将经常使用的一些命令和参数记录下来。<br>例子：<a href="https://yangkunyi.com/Share/ppt.html">https://yangkunyi.com/Share/ppt.html</a><br>原文：<a href="https://github.com/ksky521/nodeppt" target="_blank" rel="external">https://github.com/ksky521/nodeppt</a></p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>这是一款网页ppt库，只需要编辑相应的md文档就可以做出演示ppt，支持markdown,html,css,js等不同的语言，十分的方便。</p></blockquote><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="本地跑md文档"><a href="#本地跑md文档" class="headerlink" title="本地跑md文档"></a>本地跑md文档</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// port是端口号</div><div class="line">nodeppt start -p &lt;port&gt;</div></pre></td></tr></table></figure><h4 id="生成html文档"><a href="#生成html文档" class="headerlink" title="生成html文档"></a>生成html文档</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 默认生成publish文件夹</div><div class="line">nodeppt generate filename -a</div></pre></td></tr></table></figure><h3 id="常用主题和动画"><a href="#常用主题和动画" class="headerlink" title="常用主题和动画"></a>常用主题和动画</h3><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p><code>colors</code>-<code>moon</code>-<code>blue</code>-<code>dark</code>-<code>green</code>-<code>light</code></p><h4 id="翻页动画"><a href="#翻页动画" class="headerlink" title="翻页动画"></a>翻页动画</h4><ul><li>kontext</li><li>vkontext</li><li>circle</li><li>earthquake</li><li>cards</li><li>glue</li><li>stick</li><li>move</li><li>newspaper</li><li>slide</li><li>slide2</li><li>slide3</li><li>horizontal3d</li><li>horizontal</li><li>vertical3d</li><li>zoomin</li><li>zoomout</li><li>pulse</li></ul><h4 id="单页动画语法"><a href="#单页动画语法" class="headerlink" title="单页动画语法"></a>单页动画语法</h4><blockquote><p><code>{:&amp;.动画}</code></p></blockquote><hr><blockquote><p>因为自己又经常将ppt放到GitHub上去，所以也顺便记一下git的常用指令</p></blockquote><h2 id="git常用指令"><a href="#git常用指令" class="headerlink" title="git常用指令"></a>git常用指令</h2><h4 id="从本地上传到仓库的步骤"><a href="#从本地上传到仓库的步骤" class="headerlink" title="从本地上传到仓库的步骤"></a>从本地上传到仓库的步骤</h4><ol><li><code>git init</code></li><li><code>git add .</code></li><li><code>git commit -m &#39;备注&#39;</code></li><li><code>git remote origin add 仓库地址</code></li><li><code>git pull</code> //当仓库不为空的时候需要做的工作</li><li><code>git push</code></li><li><code>git status</code> //查询状态</li></ol><p><img src="http://otn4ut2th.bkt.clouddn.com/bloggithub.png" alt="git指令"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;用了好几次这个ppt，自己确实觉得这是用过的ppt中最简洁，B格最高的ppt，但是每次做都要去看原文档，十分的不方便，因此自己写一篇文章，将经常使用的一些命令和参数记录下来。&lt;br&gt;例子：&lt;a href=&quot;https://yangkunyi.com/Share/ppt.html&quot;&gt;https://yangkunyi.com/Share/ppt.html&lt;/a&gt;&lt;br&gt;原文：&lt;a href=&quot;https://github.com/ksky521/nodeppt&quot;&gt;https://github.com/ksky521/nodeppt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="nodeppt" scheme="http://yangkunyi.com/tags/nodeppt/"/>
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Day-1</title>
    <link href="http://yangkunyi.com/2018/03/12/Day-1/"/>
    <id>http://yangkunyi.com/2018/03/12/Day-1/</id>
    <published>2018-03-12T15:37:15.000Z</published>
    <updated>2018-03-12T16:17:40.878Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是自己游戏开始的第一天。</p></blockquote><a id="more"></a><h2 id="今日游戏进度"><a href="#今日游戏进度" class="headerlink" title="今日游戏进度"></a>今日游戏进度</h2><ul><li>完成英语的记忆</li></ul><blockquote><p>今天因为课程和学分的事情，未完成数学的学习，明天除了代课以外，应该能够完成自己定的计划。</p></blockquote><h2 id="今日完成事项"><a href="#今日完成事项" class="headerlink" title="今日完成事项"></a>今日完成事项</h2><ul><li>通信课程学分认定</li><li>课表课程</li><li>再次思考学校（电子科技大学 VS 四川大学）</li></ul><h2 id="明日安排"><a href="#明日安排" class="headerlink" title="明日安排"></a>明日安排</h2><ul><li>代课</li></ul><h2 id="待更进事项"><a href="#待更进事项" class="headerlink" title="待更进事项"></a>待更进事项</h2><ul><li>思想报告（2016年11月-2018年3月）</li><li>微信订阅号</li><li>博客更新</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是自己游戏开始的第一天。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="游戏攻略" scheme="http://yangkunyi.com/tags/%E6%B8%B8%E6%88%8F%E6%94%BB%E7%95%A5/"/>
    
      <category term="日记" scheme="http://yangkunyi.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>WeeklyMind-8</title>
    <link href="http://yangkunyi.com/2018/03/11/WeeklyMind-8/"/>
    <id>http://yangkunyi.com/2018/03/11/WeeklyMind-8/</id>
    <published>2018-03-11T15:36:44.000Z</published>
    <updated>2018-03-12T16:17:51.437Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是开学第一周，经过一个寒假的思考，自己选择了和之前不同的决定，那就是考研。</p></blockquote><a id="more"></a><h2 id="寒假小结"><a href="#寒假小结" class="headerlink" title="寒假小结"></a>寒假小结</h2><h4 id="“锦城之行”"><a href="#“锦城之行”" class="headerlink" title="“锦城之行”"></a>“锦城之行”</h4><blockquote><p>过程中虽然我和室长都没有提起这项人生大事，但从室长的言语中，我感受到了她心中的那份宁静，也不愿再去打破，如果这是她愿意的，也接受的，并且感受到了快乐，那接受又有什么不好呢。而自己可能还是有点不甘心吧，不想就这样过了，大学的生活过了一大半，找个工作，然后挣钱，生活，大半辈子就这样过去了，我怕到时候自己会后悔，我还想学习，其中也有一点点小小的逃避，我也不否认，所以我想再为自己努力一下吧，反正就一年，拿来学习，我相信自己还是可以的，毕竟也是经历过这样子考试的了，为了自己想要过的生活，自己也需要在上一层楼。<br>这些都是自己想的，也不知道你怎么想的。<br>两天的行程很短，但很精彩，真的很放松，在那边和室友一起出去玩的时候就经常想着有机会一定要和你出门玩一次，我们一起看逛了想逛的地方，吃了想吃的东西，这次经历我会一直记得。不过还是要说室长真的缺乏锻炼啊，我是一个喜欢散步得人，而你好像并不是很喜欢走路啊，老是走走就累了。</p></blockquote><h4 id="三三（家兔，已亡）和十七（安哥拉兔）"><a href="#三三（家兔，已亡）和十七（安哥拉兔）" class="headerlink" title="三三（家兔，已亡）和十七（安哥拉兔）"></a>三三（家兔，已亡）和十七（安哥拉兔）</h4><blockquote><p>说起来可能不信，现在十七就在我脚下，还在闹腾呢，突然有一点理解室长有了它们之后为什么得忧虑症，突然除了自己的命以外，身上又背上了一条命，然后我也快忧虑了。</p></blockquote><h4 id="过年"><a href="#过年" class="headerlink" title="过年"></a>过年</h4><blockquote><p>过年最不一样的可能就是除夕了吧，因为今年的除夕没有在家里过，而是和朋友在外面看烟花过的，总的来说感觉还是不错的。<br>然后就是每家的过年饭啊，只是人慢慢长大了，大家都开始有自己的圈子了，可能是观点上的偏差吧，开始有点疏远了。<br>今年过年是真的累，没有一天懒觉不说，自己还心系两门缓考，初六就来了学校。这些都是上学期的后遗症啊。</p></blockquote><h4 id="缓考"><a href="#缓考" class="headerlink" title="缓考"></a>缓考</h4><blockquote><p>一节课没上，用一个周时间复习两门课，然后考试，能及格都是奇迹啦！</p></blockquote><h2 id="考研准备"><a href="#考研准备" class="headerlink" title="考研准备"></a>考研准备</h2><blockquote><p>既然选择了，就要好好的开始准备，自己小金库都拿去报了班，然后还买了ipad，希望更方便看复习资料和视频等，不负青春不负自己。</p></blockquote><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li>专业：计算机科学与技术</li><li>类型：工学</li><li>学校：四川大学 VS 电子科技大学</li><li>所需分数：380分以上<ul><li>英语：70</li><li>数学：120</li><li>政治：70</li><li>专业：120</li></ul></li></ul><h3 id="考试内容"><a href="#考试内容" class="headerlink" title="考试内容"></a>考试内容</h3><h3 id="101思想政治理论"><a href="#101思想政治理论" class="headerlink" title="101思想政治理论"></a>101思想政治理论</h3><blockquote><p>记忆内容放到后两个月再复习，做题。</p></blockquote><h3 id="201英语一（本学期重点学习）"><a href="#201英语一（本学期重点学习）" class="headerlink" title="201英语一（本学期重点学习）"></a>201英语一（<strong>本学期重点学习</strong>）</h3><ul><li>词汇量</li><li>阅读能力</li><li>写作能力</li></ul><h3 id="301数学一（本学期重点学习）"><a href="#301数学一（本学期重点学习）" class="headerlink" title="301数学一（本学期重点学习）"></a>301数学一（<strong>本学期重点学习</strong>）</h3><ul><li>高等数学　56%</li><li>线性代数　22%</li><li>概率论与数理统计 22%</li></ul><h3 id="874-or-820计算机科学专业基础综合"><a href="#874-or-820计算机科学专业基础综合" class="headerlink" title="874 or 820计算机科学专业基础综合"></a>874 or 820计算机科学专业基础综合</h3><blockquote><p>这三本书都学过，这学期再过一遍，做做练习题。<br>PS：九月出考试大纲，根据大纲再复习。</p></blockquote><ul><li>数据结构（严蔚敏c语言版）</li><li>操作系统（汤子瀛）</li><li>计算机网络（谢希仁）</li></ul><h3 id="时间大纲"><a href="#时间大纲" class="headerlink" title="时间大纲"></a>时间大纲</h3><h4 id="8：00"><a href="#8：00" class="headerlink" title="8：00"></a>8：00</h4><ul><li>起床</li><li>洗漱</li><li>早饭</li></ul><h4 id="9：00之前"><a href="#9：00之前" class="headerlink" title="9：00之前"></a>9：00之前</h4><ul><li>到图书馆</li><li>每日英语</li><li>专业课复习</li></ul><h4 id="12：00-14：00"><a href="#12：00-14：00" class="headerlink" title="12：00 ~ 14：00"></a>12：00 ~ 14：00</h4><ul><li>午饭</li><li>午休</li></ul><h4 id="14：00之后"><a href="#14：00之后" class="headerlink" title="14：00之后"></a>14：00之后</h4><ul><li>每日数学</li><li>专业课复习</li></ul><h4 id="18：00-19：00"><a href="#18：00-19：00" class="headerlink" title="18：00 ~ 19：00"></a>18：00 ~ 19：00</h4><ul><li>晚饭</li><li>散步（回忆今天所复习的内容）</li></ul><h4 id="19：00-21：30"><a href="#19：00-21：30" class="headerlink" title="19：00 ~ 21：30"></a>19：00 ~ 21：30</h4><ul><li>自由学习时间</li><li>日记</li></ul><h4 id="21：40"><a href="#21：40" class="headerlink" title="21：40 ~"></a>21：40 ~</h4><ul><li>跑步</li><li>洗漱</li><li>睡觉</li></ul><h3 id="一天的学习量"><a href="#一天的学习量" class="headerlink" title="一天的学习量"></a>一天的学习量</h3><blockquote><p>这里的量会灵活机动一点，而不是所谓的一定，自己之所以做这个计划，是希望自己知道什么时候该做什么，而不是有时候无所事事。</p></blockquote><ul><li>英语：根据单词书，每天定量完成。</li><li>数学：一个月至少完成一本书！一天就大概是三节到四节的内容（可根据难易程度调整）。</li><li>专业：根绝英语和数学的量，适当看书做练习，做到对专业知识的敏感和熟悉，为后面的复习打下基础。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是开学第一周，经过一个寒假的思考，自己选择了和之前不同的决定，那就是考研。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="周记" scheme="http://yangkunyi.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>电子商务案例分析——博客来</title>
    <link href="http://yangkunyi.com/2018/02/22/%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E2%80%94%E2%80%94%E5%8D%9A%E5%AE%A2%E6%9D%A5/"/>
    <id>http://yangkunyi.com/2018/02/22/电子商务案例分析——博客来/</id>
    <published>2018-02-22T07:50:50.000Z</published>
    <updated>2019-02-27T08:07:33.718Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本次分析主要从博客来的团队，经营理念，市场定位，营销策略，竞争优势，网站特色，APP架构，成功原因等方面分析。</p></blockquote><a id="more"></a><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h3><ul><li>根据蹇洁老师对本学期自己无法在本学期完成电子商务案例分析课程的要求，自己在台湾选择两所电子商务公司做为案例，进行案例分析；再次根据自己的了解，自己选择博客来作为其中一所电子商务企业作为一个案例来分析，自己有尝试联系位于台北的总部，希望可以到总公司进行参访，但是官方拒绝了自己的申请，所以下面的分析来自与自己查阅的资料，以及使用博客来的一些亲身体验。</li></ul><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><ul><li>以博客来为例完成电子商务案例分析。</li><li>分析经营策略</li><li>分析竞争优势</li><li>分析官网</li><li>分析App</li><li>浅谈成功原因</li><li>浅谈未来发展</li></ul><h2 id="二、博客来简介"><a href="#二、博客来简介" class="headerlink" title="二、博客来简介"></a>二、博客来简介</h2><h3 id="创业背景"><a href="#创业背景" class="headerlink" title="创业背景"></a>创业背景</h3><ul><li>于 1995 年创立，迄今已成为台湾最大的网络书店。</li><li>创立起因于总经理张天立于八年多前刚回台湾之际，看到台湾整个书籍信息传递多是透过宣传单张、目录或传真的方式，无法有效而迅速地传达书讯给读者以及无法有效地整合全国的书籍信息，抱着内心一股对文化的理想，凭借直觉与热情，在当时台湾因特网尚处于蛮荒时期的 状况下，创立了博客来，并坚持努力。</li><li>选择书籍为销售商品则因书籍最适合网络购物价格、也最适合网络传递信息、知识的属性。 在博客来买书，必须要加入会员才有资格，网友可免费加入会员，照使用密码与账号来买书，不须再重复填写任何数据，就可将书籍直接寄至会员基本数据输入的地址，不但方便，也不用担心网络交易被他人冒用；而会员在登录数据时，可选择有兴趣的主题，博客来也会定期将这些书讯，以E-mail的方式寄给会员。</li><li>另外网站上还有贴心的服务，对第一次来到博客来的读者做详细的使用介绍，更为了向消费者保证交 易安全，更有专门网页介绍其安全机制，以确保消费者的权益。</li><li>是一个类似超级大型卖场的网络书讯服务站，主要提供消费者50余家知名出版社、二十万余册的详细书讯，并可以享受直接在网络上刷卡购书的便利。</li><li>并且经过发展，现在将生活也纳入整个系统中，网站上的内容不再只有书籍，提供了更多的购物服务。（类似与大陆的当当网，书籍为主，生活为辅）</li></ul><h2 id="三、经营团队"><a href="#三、经营团队" class="headerlink" title="三、经营团队"></a>三、经营团队</h2><ul><li>员工人数：260人</li><li>资本额：2亿</li><li>公司负责人：林丕容</li><li>总经理：高明义</li><li>博客来成立于1995年，是台湾图书、影音销售第一大通路，近年更积极跨足成为全方位网购零售平台，以「在购物中思考‧在阅读中进化」为品牌精神，持续拓展百货商品品类与服务，以更简易、更贴心的购物接口及流程、便捷的出货速度与优质的客服服务，博客来更获得经济部「数据隐私保护标章认证」的安全购物网站，期待提供消费者更安全、便利、无障碍的购物体验。</li></ul><h2 id="四、经营理念"><a href="#四、经营理念" class="headerlink" title="四、经营理念"></a>四、经营理念</h2><ul><li><strong>「提供诚信、便利、专业、创新的服务平台，打造消费者完美使用经验。」成为华文世界电子商务服务平台的第一品牌。</strong></li><li>以谦虚的态度接受环境的要求，持续开发符合会员多元选择的商品属性及数量，设计更简易、更贴心的购物接口及流程，挑战更快的出货速度及更好的客户服务质量，为广大华文阅读人口在虚拟环境中提供真实、有效率的服务，并为信息需求人口而努力，建造最便捷的书籍讯息 管道，期待迈向更安全、更便利、无障碍的电子商务服务平台。</li></ul><h2 id="五、市场定位"><a href="#五、市场定位" class="headerlink" title="五、市场定位"></a>五、市场定位</h2><ul><li>博客来自我定位为<strong>「全球华文的知识入口」</strong>，强调为广大华文知识需求人口提供丰富完整的服务。以华文书籍经营开始事业的发展，将来仍将以此作为企业主要经营的项目。至今以台湾地区的出版品为主，亦将把香港、中国大陆地区出版品资料纳入，以提供完整的华文书讯。陆续开发的新商品，亦围绕网络人口对知识的需求之上，包括古典音乐CD、爵士乐CD、杂志、电子书 等会是书籍之外重要的服务项目。</li></ul><h2 id="六、经营策略"><a href="#六、经营策略" class="headerlink" title="六、经营策略"></a>六、经营策略</h2><h3 id="1-与实体书店明显区别"><a href="#1-与实体书店明显区别" class="headerlink" title="1. 与实体书店明显区别"></a>1. 与实体书店明显区别</h3><ul><li>博客来贴近消费者的方式，一是<strong>数据库愈来愈丰富</strong>，二是<strong>配送速度愈来愈快</strong>。</li><li>和实体商店相比，虚拟商务最重要的物流服务是在销售后才开始，而且寄送的速度代表对消费者的服务品质，也是对业者相当大的挑战。</li><li>虚拟化商品本来就不易得到消费者的信任与好感，如果总是以折扣来刺激购买力，以目前销售量有限的情形来看，恐怕会得反效果。因此虚拟商店必须更注重<strong>加值服务</strong>，才能与实体商店做出明显区隔。</li><li>实体书店需要的是「<strong>库存量</strong>」，而网络书店则需要一个强大完善的「<strong>数据库</strong>」。</li></ul><h4 id="传统书店和网络书店的比较"><a href="#传统书店和网络书店的比较" class="headerlink" title="传统书店和网络书店的比较"></a>传统书店和网络书店的比较</h4><table><thead><tr><th style="text-align:center">\</th><th style="text-align:center">传统书店</th><th style="text-align:center">网络书店</th></tr></thead><tbody><tr><td style="text-align:center">地区限制</td><td style="text-align:center">有（限定某区域）</td><td style="text-align:center">无（互联网全世界都可以看到）</td></tr><tr><td style="text-align:center">气候影响</td><td style="text-align:center">有（天气不好客人少）</td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">时间限制</td><td style="text-align:center">有（晚上会关门）</td><td style="text-align:center">无（服务器24小时不断线）</td></tr><tr><td style="text-align:center">交易方便度</td><td style="text-align:center">低（还需要亲自到现场）</td><td style="text-align:center">高</td></tr><tr><td style="text-align:center">开店成本</td><td style="text-align:center">成本高（主要是店面租金）</td><td style="text-align:center">成本低</td></tr><tr><td style="text-align:center">交易风险</td><td style="text-align:center">低（一手交钱，一手交货）</td><td style="text-align:center">高</td></tr><tr><td style="text-align:center">商品品质</td><td style="text-align:center">高（亲眼可见，亲手可感）</td><td style="text-align:center">低（容易有瑕疵，和预想不一样）</td></tr></tbody></table><h3 id="2-企业合作"><a href="#2-企业合作" class="headerlink" title="2. 企业合作"></a>2. 企业合作</h3><ul><li>无论是实体的社群或是虚拟的社群，如和企业、学校合作等。博客来网络书店目前与1,500 家出版社建立合作关系，在预售书方面获得极大成绩，并将与更多实体通路合作，继续扩大在网络书店市场的占有率。</li></ul><h3 id="3-超强物流"><a href="#3-超强物流" class="headerlink" title="3. 超强物流"></a>3. 超强物流</h3><ul><li>利用统一超商的物流系统，具有相当大的优势。可于统一超商取书付款的方式，提供以此方式取书的消费者更高的折扣，以节省邮资成本，另外在购物流程中务求简单流畅。</li><li>简单来说博客来和大智通物流中心合作，其主要客户及经营的业务为负责母公司统一超商通路及其他通路像博客来、统一型录、康是美、统一皇帽等，共约4,500店的出版品、影音信息、数字影像服务、 玩具等营销与配送业务。</li><li>拥有全省7-11之强大通路支持，公司业务含盖物流、出版、冲印、网站、礼赠品等业务！目前也为 7-11 专业代理冲印便、数字影像网站及I cash卡团卡制等业务。</li><li>大智通除专业的物流服务外，其业务内容是为出版社、通路及消费者规划优质的营销活动。</li><li>台湾的统一超商每条街都也，也就是说你前一天在网上买的书第二天就到你家最近的超商店里了，绝对强的物流。</li></ul><h3 id="4-吸收邮资，降低消费者成本"><a href="#4-吸收邮资，降低消费者成本" class="headerlink" title="4. 吸收邮资，降低消费者成本"></a>4. 吸收邮资，降低消费者成本</h3><ul><li>利用统一超商的物流系统，具有相当大的优势。可于统一超商取书付款的方式，提供以此方式取书的消费者更高的折扣，以节省邮资成本，另外在购物流程中务求简单流畅。</li></ul><h3 id="5-利润来源"><a href="#5-利润来源" class="headerlink" title="5. 利润来源"></a>5. 利润来源</h3><ul><li>计算每月成本并能用适度的成本来完成工作，另外计算每本书利润，以算出卖出多少书本能达获利并以此为目标。</li><li>博客来的利润来源来自于卖书，不过博客来强调单靠卖书的利润相当微薄，这与台湾的邮资高居不下有很大的关系。</li></ul><h3 id="6-电子书出版"><a href="#6-电子书出版" class="headerlink" title="6. 电子书出版"></a>6. 电子书出版</h3><ul><li>实体书为目前主流，但电子书是未来趋势。对出版业来说，可大幅节省成本的数字内容出版潜力无穷，然而对于内容保护措施以及电子出版流程的安全性却是业者未能大举攻措之因。数字内容的加密保护周全与否是影响获利的重要关键之一；成熟的版权保护及制作技术，都是电子书发展成功的重要因素。</li><li>博客来网络书店是台湾最早成立的网络书店。除了实体书的交易，电子书销售服务也是博客来开发的市场之一。而博客来网络书店在采用台湾数字版权管理系统供货商优硕系统「eBook 版权管理系统」后，已有作业及营销上的成效。</li><li>博客来在2001年2月选择台湾数字权利商优硕信息做为技术伙伴，推出付费电子书下载服务。电子书的内容由博客来向出版社取得授权，博客来提供销售平台，而电子书制作、转文件加密等技术流程，则由优硕负责。在推出电子书销售后，一年来已有超过上万人次付费下载电子书。而未来即将推出的PDA版本电子书，预估全年下载人次将增加数倍。</li><li>博客来所采用的优硕电子书系统 (Neovue eBook System)」，采用 128-Bit AES 加密机制，优硕电子书系统整合创作、制作、发行与阅读平台，更为博客来快速建立完整的电子书产销体系。博客来营销部门还可根据系统每月所提供之销售统计作客户分析，精准进行数据库营销。此套电子书解决方案也可整合现有出版系统，并支持多种付款机制的完整B2B2C平台。</li></ul><h3 id="7-利用facebook管理粉丝"><a href="#7-利用facebook管理粉丝" class="headerlink" title="7. 利用facebook管理粉丝"></a>7. 利用facebook管理粉丝</h3><ul><li>客服跟大陆类似的在线服务，而是利用email和facebook与网站的会员进行联系。</li><li>不过网站的客服专区基本能解决大部分的问题，而email服务则是提供给需要特别服务的客户的，其次是用来发布消息的facebook官方账号，这就类似与大陆的微信公众号，推送的是网站最近的消息，通过这样的方式来活跃会员，并且将网站的最新消息推送给会员。</li><li>因为facebook是一个更加开放的平台，因此不仅仅可以活跃已经关注的会员，同时也可以起到宣传的目的，在广场上的活跃度也能提升网站的知名度。</li></ul><h2 id="七、竞争优势"><a href="#七、竞争优势" class="headerlink" title="七、竞争优势"></a>七、竞争优势</h2><blockquote><p>通过SWOT分析法来体现竞争优势。</p></blockquote><h4 id="博客来的S（优势Strengths）"><a href="#博客来的S（优势Strengths）" class="headerlink" title="博客来的S（优势Strengths）"></a>博客来的S（优势Strengths）</h4><ol><li>书籍商品种类丰富</li><li>随时随地都可以购买</li><li>与 7-11 合作到店取货</li><li>完整性的数据库，搜寻方便</li><li>价格便宜</li><li>物流快</li></ol><h4 id="博客来的W（劣势Weakneses）"><a href="#博客来的W（劣势Weakneses）" class="headerlink" title="博客来的W（劣势Weakneses）"></a>博客来的W（劣势Weakneses）</h4><ol><li>未达金额有运费</li><li>缺货时等待时间长</li><li>无法直接确认书况</li><li>竞争业者的增加</li></ol><h4 id="博客来的O（机会Opportunities）"><a href="#博客来的O（机会Opportunities）" class="headerlink" title="博客来的O（机会Opportunities）"></a>博客来的O（机会Opportunities）</h4><ol><li>网络购物为未来的趋势</li><li>独家物流的配送方式</li><li>商品多元化</li><li>利用会员优惠得到消费者的信赖</li></ol><h4 id="博客来的T（威胁Threats）"><a href="#博客来的T（威胁Threats）" class="headerlink" title="博客来的T（威胁Threats）"></a>博客来的T（威胁Threats）</h4><ol><li>网络安全性的把关</li><li>传统网络书店(EX:亚马逊)</li><li>实体店面加入网络战场</li><li>成交金额偏低</li><li>电子书发展成熟</li></ol><h2 id="八、网站特色"><a href="#八、网站特色" class="headerlink" title="八、网站特色"></a>八、网站特色</h2><h3 id="网站上人口"><a href="#网站上人口" class="headerlink" title="网站上人口"></a>网站上人口</h3><ul><li>网站主要会员是由关心社会议题、支持公益活动，追求品味与质感生活的消费者组成。</li><li>会员数在2015年已经突破500万。</li></ul><h3 id="逻辑思维图分析网站结构"><a href="#逻辑思维图分析网站结构" class="headerlink" title="逻辑思维图分析网站结构"></a>逻辑思维图分析网站结构</h3><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/%E5%8D%9A%E5%AE%A2%E6%9D%A5%E7%BD%91%E9%A1%B5.png?raw=true" alt="博客来网页分析"></p><p>图片链接：<a href="http://otn4ut2th.bkt.clouddn.com/study%E5%8D%9A%E5%AE%A2%E6%9D%A5%E7%BD%91%E9%A1%B5.png" target="_blank" rel="external">http://otn4ut2th.bkt.clouddn.com/study%E5%8D%9A%E5%AE%A2%E6%9D%A5%E7%BD%91%E9%A1%B5.png</a></p><h2 id="九、APP架构"><a href="#九、APP架构" class="headerlink" title="九、APP架构"></a>九、APP架构</h2><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/%E5%8D%9A%E5%AE%A2%E6%9D%A5APP.png?raw=true" alt="App架构"></p><p>图片链接：<a href="http://otn4ut2th.bkt.clouddn.com/study%E5%8D%9A%E5%AE%A2%E6%9D%A5APP.png" target="_blank" rel="external">http://otn4ut2th.bkt.clouddn.com/study%E5%8D%9A%E5%AE%A2%E6%9D%A5APP.png</a></p><h2 id="九、成功原因"><a href="#九、成功原因" class="headerlink" title="九、成功原因"></a>九、成功原因</h2><ol><li>规避在线付款的风险，打造超商付款的商机</li><li>贴心的为会员服务，提供会员个人化电子报</li><li>订购容易，取货据点多、推出10天内退货等售后服务</li><li>提供消费者完整的书籍讯息（包括绝版书）</li><li>常办活动，以五折价出售畅销书</li><li>无论是新书或其他书籍皆有折扣，且新书折扣期间较长</li><li>订单送出后如有库存三天后即可领取商品，推出中午前订明天到的销售方法</li></ol><h2 id="十、未来发展"><a href="#十、未来发展" class="headerlink" title="十、未来发展"></a>十、未来发展</h2><ul><li>博客来网络书店总经理张天立认为：”实体书店和网络书店是可以并存的，实体书店不会因为网络书店的出现就消灭或结束”。网络书店与实体书店各自代表着不同的意义，各自有不同的功能，网络书店与实体书店并存，可以提供各式各样不同类型的消费者更多的选择管道。</li><li>当初创办博客来网络书店，最大的动机不在于商业的营利性，而是在于整合台湾的出版资源及提升阅读环境的理念下而出发，因此在未来，博客来将不只提供读者购书的服务，更希望成为主动的导览者、专业的推介人，读者不仅可以在博客来看到越来越多种商品，更有越来越快速而方便的服务，并更有效率地与读者分享知识的传递及推广，让读者在网络上能够遇见更多种可能性！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本次分析主要从博客来的团队，经营理念，市场定位，营销策略，竞争优势，网站特色，APP架构，成功原因等方面分析。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="网页分析" scheme="http://yangkunyi.com/tags/%E7%BD%91%E9%A1%B5%E5%88%86%E6%9E%90/"/>
    
      <category term="电子商务" scheme="http://yangkunyi.com/tags/%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>物流App分析——货车帮</title>
    <link href="http://yangkunyi.com/2018/01/27/%E7%89%A9%E6%B5%81App%E5%88%86%E6%9E%90%E2%80%94%E2%80%94%E8%B4%A7%E8%BD%A6%E5%B8%AE/"/>
    <id>http://yangkunyi.com/2018/01/27/物流App分析——货车帮/</id>
    <published>2018-01-27T06:28:19.000Z</published>
    <updated>2019-02-27T08:07:06.440Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>物流App营销策略分析——以货车帮为例</p></blockquote><a id="more"></a><h2 id="App架构"><a href="#App架构" class="headerlink" title="App架构"></a>App架构</h2><blockquote><p>其实货车帮App有根据使用者的不同，分别有两个，一个是给司机使用，一个是给货主使用。如图：</p></blockquote><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/%E8%B4%A7%E8%BD%A6%E5%B8%AEApp.png?raw=true" alt="货车帮App架构图"></p><h2 id="营销策略"><a href="#营销策略" class="headerlink" title="营销策略"></a>营销策略</h2><h4 id="品牌策略"><a href="#品牌策略" class="headerlink" title="品牌策略"></a>品牌策略</h4><p>主要产品为货车帮手机App，目前支持Android和iOS两大主流平台。该手机App专门针对国内的卡车司机提供货源匹配核心功能，同时提供交易担保、卡车团购、维修救援、汽配销售等周边产品服务。同时也专门对国内货主提供配送司机的核心功能，同时提供货物担保等服务。整合了国内的货物与货车资源，解决了让货主和司机最实际最头疼的问题，以此获得不少司机和货主的青睐。</p><h4 id="网页策略"><a href="#网页策略" class="headerlink" title="网页策略"></a>网页策略</h4><h5 id="网页架构"><a href="#网页架构" class="headerlink" title="网页架构"></a>网页架构</h5><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/%E8%B4%A7%E8%BD%A6%E5%B8%AE%E5%AE%98%E7%BD%91%E7%BB%93%E6%9E%84.png?raw=true" alt="官网架构"></p><h5 id="网页类型"><a href="#网页类型" class="headerlink" title="网页类型"></a>网页类型</h5><p>本网站属于单一的企业介绍网站。</p><h4 id="产品策略"><a href="#产品策略" class="headerlink" title="产品策略"></a>产品策略</h4><h5 id="产品功能"><a href="#产品功能" class="headerlink" title="产品功能"></a>产品功能</h5><blockquote><p>千万优质货源信息实时跟新，全新操作页面，找货更简便。</p></blockquote><ol><li>优质货源一键订阅，实时语音提示</li><li>ETC享优惠，拉货省钱又安心</li><li>担保交易保障，放空赔付无需担心空返</li><li>短信一键定位，让货主发现身边的你</li><li>快速计算里程估测成本</li><li>违章查询信息查询</li></ol><h5 id="产品特点"><a href="#产品特点" class="headerlink" title="产品特点"></a>产品特点</h5><ol><li>覆盖全国的货源信息网络及公共运力池，同时在全国设立线下直营服务网点，线上线下联动，保障了良好的服务水平。</li><li>严格的审核机制，构建平台诚信体系。司机和货主均需要通过严格的材料审核，才能注册和使用货车帮APP，同时平台提供担保交易，保障司机利益。</li><li>独有的公路物流垂直领域的大数据。2015年，货车帮联合阿里云大数据团队共同打造的全国公路物流指数，全面反映了我国公路物流货物运输流向、货物分布情况、车辆分布情况，丰富了物流统计指标体系。</li></ol><h5 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h5><ol><li>订阅货源数量显示更准确；</li><li>订阅货源列表支持车长/车型筛选；</li><li>订单详情支持发送证件给货主；</li><li>扫一扫功能统一至附近频道；</li><li>“我的”提供统一客服入口；</li></ol><h4 id="价格策略"><a href="#价格策略" class="headerlink" title="价格策略"></a>价格策略</h4><ul><li>A套餐 688元–100条，每条货源6.8元</li><li>B套餐1688元–2000条，每条货源0.84元</li><li>C套餐 2688元–5000条，每条货源0.54元</li><li>D套餐 3688元–10000条，每条货源0.37元</li></ul><h4 id="促销策略"><a href="#促销策略" class="headerlink" title="促销策略"></a>促销策略</h4><h5 id="对司机"><a href="#对司机" class="headerlink" title="对司机"></a>对司机</h5><ul><li>一站式提供油品、ETC、白条、保险、新车等产品优惠（双十一）。</li><li>从购车、保险、拉货、加油、过路费、贷款周转等全链条钜惠用户，现金券、低折扣、诚意金抵扣现金、礼品抽奖等活动丰富，优惠力度空前，福利毫不逊色电商平台（双十一）。</li><li>针对信用好的会员，平台会给予优质货源置顶、优先积分变现、金融支持优惠、投诉优先调处、专职服务顾问等奖励（会员行为守则）。</li></ul><h5 id="对货主"><a href="#对货主" class="headerlink" title="对货主"></a>对货主</h5><ul><li>运费打折</li><li>免保险费</li></ul><h5 id="整体策略"><a href="#整体策略" class="headerlink" title="整体策略"></a>整体策略</h5><ul><li>借助网上知名站点（ISP或ICP）、免费电子邮件和一些免费公开的交互站点（如新闻组、公告栏）发布企业的产品信息，对企业和产品进行宣传推广。</li><li>利用网络营销策略扩大站点的知名度，吸引上网者访问网站，起到宣传和推广企业以及企业产品的效果。</li><li>利用可以直接销售的网络营销站点，采用一些销售促进方法如价格折扣、有奖销售、拍卖销售等方式，宣传和推广产品。</li><li>借助互联网的交互功能吸引用户与企业保持密切关系，培养顾客忠诚度，提高企业收益率。</li></ul><h4 id="渠道策略"><a href="#渠道策略" class="headerlink" title="渠道策略"></a>渠道策略</h4><ul><li>及时在网站发布促销信息、新产品信息、公司动态</li><li>为了方便付款还要提供多种支付模式</li><li>与多家大企业合作，通过这些合作将产品推广到更多人面前</li></ul><h4 id="客服策略"><a href="#客服策略" class="headerlink" title="客服策略"></a>客服策略</h4><ul><li>客户电话：95006（会主动给客户打电话询问需求）</li><li>微信小程序：提供App类似服务</li><li>微信公众号：第一时间提供最新消息</li><li>线下地址：贵州省贵阳市经济技术开发区（原小河区）开发大道123号</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;物流App营销策略分析——以货车帮为例&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="App分析" scheme="http://yangkunyi.com/tags/App%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>电子商务案例分析——PChome</title>
    <link href="http://yangkunyi.com/2018/01/21/%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E2%80%94%E2%80%94PChome/"/>
    <id>http://yangkunyi.com/2018/01/21/电子商务案例分析——PChome/</id>
    <published>2018-01-21T07:45:43.000Z</published>
    <updated>2019-02-27T08:07:28.905Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本次分析主要从PChome网络家庭的经营现状，营销策略，网站特色和结构，面临的挑战，潜在的问题和五力等方面分析。</p></blockquote><a id="more"></a><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h3><blockquote><p>根据蹇洁老师对本学期自己无法在本学期完成电子商务案例分析课程的要求，自己在台湾选择两所电子商务公司做为案例，进行案例分析；再次根据自己的了解，自己选择博客来PChome作为其中一所电子商务企业作为一个案例来分析，自己有尝试联系PChome的总部，希望可以到总公司进行参访，但是官方拒绝了自己的申请，所以下面的分析来自与自己查阅的资料，以及使用PChome的一些亲身体验。</p></blockquote><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><ul><li>以PChome家庭网络为例完成电子商务案例分析。</li><li>分析经营现状</li><li>分析营销策略</li><li>分析官方网站</li><li>分析挑战和问题</li><li>分析五力</li></ul><h2 id="二、PChone简介"><a href="#二、PChone简介" class="headerlink" title="二、PChone简介"></a>二、PChone简介</h2><ul><li>电子商务主要可分成三种商业模式，网家集团当然皆有布局。网家母公司经营的是 B2C(PChome 在线购物)，两家子公司则分别经营 C2C(露天拍卖)与 B2B2C(商店街)。</li><li>B2C 为传统的购物网站型态，即消费者向购物网站下单，购物网站再向大盘商调货来出给消费者。台湾前五大 B2C 网站依序为网家、台湾奇摩、富邦 momo、博客来、Pay Easy 等，合计市占率(电子商务)超过50%，网家的市占率则约为 17~18%。</li><li>网家是在 2000 年开始 PChome 在线购物的业务，并于 2007 年开始提供「24H 购物」的服务。可以想象，要在这么短的时间送货给消费者，物流能力将会是决胜关键，为了维持成长，网家每年要增加一处仓储中心喔！</li></ul><h2 id="三、经营现状"><a href="#三、经营现状" class="headerlink" title="三、经营现状"></a>三、经营现状</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">详情</th></tr></thead><tbody><tr><td style="text-align:center">产业</td><td style="text-align:center">电子咨询供应服务</td></tr><tr><td style="text-align:center">营业额（季度）</td><td style="text-align:center">31.34亿元新台币</td></tr><tr><td style="text-align:center">总资产（季度）</td><td style="text-align:center">27.24亿元新台币</td></tr><tr><td style="text-align:center">资产净值（季度）</td><td style="text-align:center">12.01亿元新台币</td></tr><tr><td style="text-align:center">实收资本额（月）</td><td style="text-align:center">6924388450元新台币</td></tr><tr><td style="text-align:center">结算期</td><td style="text-align:center">每年12月（月制会计年度）</td></tr><tr><td style="text-align:center">主要股东</td><td style="text-align:center">赛特咨询服务有限公司</td></tr><tr><td style="text-align:center">子公司</td><td style="text-align:center">露天市集国际信息股份有限公司<br>网络家庭投资顾问股份有限公司<br>网络家庭投资开发股份有限公司<br>乐屋国际信息股份有限公司等</td></tr><tr><td style="text-align:center">网址</td><td style="text-align:center">www.pchome.com.tw</td></tr></tbody></table><h3 id="独立仓库"><a href="#独立仓库" class="headerlink" title="独立仓库"></a>独立仓库</h3><ul><li>入口网站提供电子商务服务的典型为台湾 PChome 网络家庭及香港商 Yahoo！奇摩，由 PChome 先开始的电子商务销售。早期电子商务网站是转单模式，店商平台像是大型的购物目录消费者下单后，由平台将订单转至各供货商，再由供货商出货。由于效率不佳，也较难掌控购物流程质量，故PChome后来直接开设独立仓库，开始自己主导购物流程，由于后台可以更顺利串流至仓储系统及金物流，让消费者真正享受到网络购物的方便性。 </li><li>PChome 推出全球创举24小时到货专区(PChome 24h 购物)！率先采用中央仓储方式，掌握整体配送流程。这不仅让网购平台不再只是供应商与顾客之间的媒介，他们所追求的「订单、库存、出货零时差」更让网购通路成为足以和实体通路分庭抗礼的购物管道。</li></ul><h3 id="经营模式"><a href="#经营模式" class="headerlink" title="经营模式"></a>经营模式</h3><ul><li>过去 PChome 一直与 Yahoo！奇摩购物中心对打，当时 PChome 只是以低价要求的网络通路，直到后来效法Amazon建立物流仓储系统。以三班制24小时的台式服务精神，在仓库中不断用手推车走到不同货架前检货，他们以:网络购物只要专心一件事，「就是如何让消费者最快拿到商品。」然后推出了让消费者可以放心并准确预测收到时间的 PC home 24 小时到货服务来取的顾客的信任与满足下单者对于产品拿到的时效性限制。</li></ul><p><strong>推出的创新服务</strong><br>| 名称        | 详情   |<br>| :——–:   | :—–:  |<br>| PChome Online 线上购物创新服务     | 杂志的网络订阅平台 |<br>| ATM 一对一账户转账        |   线上分期付款   |<br>| 线上捐赠发票给福利团体        |    跟实体大通路合作    |<br>| 网络首买 MP3       |   线上折价券   |<br>| 线上现金积点        |    简讯确定订单    |<br>| 线上自动退货        |   发票电子化寄送   |<br>| 信用卡红利积点折抵刷卡金        |    首创线上购物24小时专区    |<br>| 增加更多的福利来满足消费者       |  购物更便利  |</p><h3 id="服务流程"><a href="#服务流程" class="headerlink" title="服务流程"></a>服务流程</h3><blockquote><p>他们有自己的仓储库减少消费者下单后还需要向源头厂商叫货并集中后再统一宅配至消费者手上的时间，尽可能地与消费者拉近距离，简化流程增加时效性。</p></blockquote><p><strong>作业流程的比较</strong></p><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/PChome%E4%BD%9C%E4%B8%9A%E6%B5%81%E7%A8%8B%E6%AF%94%E8%BE%83.jpg?raw=true" alt="作业流程比较"></p><h3 id="2015年营业收入报告"><a href="#2015年营业收入报告" class="headerlink" title="2015年营业收入报告"></a>2015年营业收入报告</h3><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/PChome%E6%9C%88%E6%94%B6%E5%85%A5%E6%8A%A5%E5%91%8A.PNG?raw=true" alt="月收入报告"></p><h2 id="四、营销策略"><a href="#四、营销策略" class="headerlink" title="四、营销策略"></a>四、营销策略</h2><blockquote><p>PChome成立于 1998 年，为一综合网络服务集团，提供电子商务、入口网站、网络电信服务等，其中电子商务与网络电信服务早已是台湾龙头，入口网站则是全国第二大。</p></blockquote><p><strong>PChome业务结构</strong></p><p><img src="https://github.com/FrannieYi/Blogimage/blob/master/PChome%E4%B8%9A%E5%8A%A1%E7%BB%93%E6%9E%84.png?raw=true" alt="Pchome业务结构"></p><h3 id="市场分析"><a href="#市场分析" class="headerlink" title="市场分析"></a>市场分析</h3><ol><li>商品内容：内容多样性，但易精品为主</li><li>区域市场：台湾为主</li><li>产品市场销售：较为热门</li><li>消费者购买类型分析：以一般生活用品，衣服，鞋子等为主</li><li>销售费用：基本手续费</li></ol><h3 id="整体行销策略"><a href="#整体行销策略" class="headerlink" title="整体行销策略"></a>整体行销策略</h3><h4 id="1-品牌形象"><a href="#1-品牌形象" class="headerlink" title="1. 品牌形象"></a>1. 品牌形象</h4><ul><li>突显品牌的价值与差異，努力提升品牌形象，并提高客户信赖度及消费者认同感。积极配合上下游厂商，建立良好互动关系，以掌握稳定的供货及销售网络，及由供货商提供之良好服务及产品，维护公司之 良好商誉。</li></ul><h4 id="2-消费者导向策略"><a href="#2-消费者导向策略" class="headerlink" title="2. 消费者导向策略"></a>2. 消费者导向策略</h4><ul><li>计划根据既有的营运成功经验，以消费者导向为主要营销策略，提供更多、更完整、更便宜、各方便的网络购物环境，并持续推动与其他产业之合作计划，寻求同业或異业之策略联盟；网络购物流程则兼顾交易安全化及交易接口简单化。长期而言，持续加强消费者导向，贴近网络消费者习性需求，推出符合消费者期望之产品或服务。</li></ul><h4 id="3-差异化策略"><a href="#3-差异化策略" class="headerlink" title="3. 差异化策略"></a>3. 差异化策略</h4><ul><li>依消费者族群偏好为依据，客户的需求为导向，了解客户的年龄结构、消费趋向及消费习惯，并以有效的方式达到广告与宣传效果，藉由将市场切割为愈小的区块，愈能为消费者提供愈优质的服务与产品。</li></ul><h4 id="4-快速回应"><a href="#4-快速回应" class="headerlink" title="4. 快速回应"></a>4. 快速回应</h4><ul><li>将入口网站与在线购物之业务、研发客服人员，按照产品别进行任务编组，以更完善的服务质量，增加产品的附加价值，并更快速响应消 费者或客户的问题。</li></ul><h3 id="STP分析"><a href="#STP分析" class="headerlink" title="STP分析"></a>STP分析</h3><ol><li>市场细分（market segmentation）：自由的买卖方式让各族群能便利购物。</li><li>目标市场（market targeting）：通用于各族群间使用，提高便利性与使用方法。</li><li>市场定位（market poditioning）：购物、拍卖网站，以多样化的民生用品或信息产品。</li></ol><h3 id="4P分析"><a href="#4P分析" class="headerlink" title="4P分析"></a>4P分析</h3><h4 id="1-产品"><a href="#1-产品" class="headerlink" title="1. 产品"></a>1. 产品</h4><ul><li>网络购物的优点在于不需实体店面，因此在不用考虑空间的限制下，商品的种类就可以多元化，消费者可以在一个地方购足他们所需的各种商品。所以在产品类型的多样化是网络营销的重要关键。在 PChome 或 Yahoo 首页即可见到各类商品，让消费者可以依需求选择。</li></ul><h4 id="2-价格"><a href="#2-价格" class="headerlink" title="2. 价格"></a>2. 价格</h4><ul><li>低价，一直是消费者会购物的一大原因。购物网站首页总是会有各种 促销方案。PChome 网络家庭的总体策略是「希望给消费者最优惠的价格，并赚取合理的报酬，但是要给消费者最实惠的价格，缩少通路的层级。」是由公司营运长谢振豊所规划出来的组织方向。</li></ul><h4 id="3-通路"><a href="#3-通路" class="headerlink" title="3. 通路"></a>3. 通路</h4><ul><li>网络商店由于无实体店面，虽然不能提供现场选货服务，但省下可观的店租成本，在通路上，网络营销的组织弹性是较大的，能够因应环境做适当调整。且对于消费者而言，超商取货、宅配，都是极为方便的选择。</li></ul><h4 id="4-促销"><a href="#4-促销" class="headerlink" title="4. 促销"></a>4. 促销</h4><ul><li>购买流程的简易便利性，也影响着消费者的选择，Yahoo 和 PChome 也不时推出各类促销活动，且 PChome 的 24 小时送货服务、逾期还有积点的赔偿，这样的策略让许多消费者选择这样的服务。</li></ul><h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><h4 id="1-网页"><a href="#1-网页" class="headerlink" title="1. 网页"></a>1. 网页</h4><ul><li>PChome 24 小时购物精准掌握消费者需求产出新服务概念，解决顾客下订单之后等太久的困扰，为顾客创造价值才是创新的根本。</li><li>PChome 24 小时购物的「新服务概念」、「新客户接口」、「新服务传递系统」、「技术选择」四构面都有相当的创新。<ul><li>PChome 24 小时购物服务的内容与特色鲜明，锁定需要快速收到货的目标族群，在网络购物市场找到独特利基优势。</li><li>PChome 24 小时购物在新客户接口提供「容易操作」、「容易查询」商流服务接口，有助于创新服务的表现。</li><li>PChome 24 小时购物设计三个新流程：(1)商品选购、(2)成立仓储物流中心集中管理商品、(3)宅配送达，来处理商流、金流、物流、 信息流。</li><li>PChome 24 小时购物的核心技术策略，成功开发「快速供货管理系统」及「硬盘式仓储管理储存模式」二个 IT 系统，成功作到资讯实时整合，让订单零时差、出货零时差、库存零时差，为技术 选择关键。</li></ul></li></ul><h4 id="2-科技"><a href="#2-科技" class="headerlink" title="2. 科技"></a>2. 科技</h4><ul><li>「技术选择」在 PChome 24 小时购物创新服务的扮演不可或缺的关键性角色，技术决定服务，支撑「新服务概念」「服务传递系统」、「新 12 客户接口」其它三构面。</li></ul><h4 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h4><ul><li>PChome 24 小时购物的营销、分配、及组织发展策略奏效，链接新服务概念、新客户接口、新服务传递系统，成功推行创新服务。<ul><li>PChome 的营销策略锁定需要迅速收到货的目标市场，提供多样产品选择，强化 24 小时购物品牌形象。</li><li>PChome 整合统一速达的宅配，提供 24 小时购物服务，与为分配策略重要的一环。</li><li>PChome 24 小时购物的组织发展策略，在组织资源及能耐已有足够的能力规划及经营管理此创新服务。</li><li>PChome 降低消费者交易成本，缩短交易流程及时间，加速消费者采纳 24 小时购物。</li></ul></li></ul><h2 id="五、网站特色和结构"><a href="#五、网站特色和结构" class="headerlink" title="五、网站特色和结构"></a>五、网站特色和结构</h2><ol><li>网站架构与功能 </li></ol><ul><li>(1) 架构：用会员登入后浏览供货商的产品并做竞标或购买的手续， 然后再以各种负费方式(信用卡.转账)来付款。 </li><li>(2) 功能：PChome -提供网络商品展示平台让买家卖家可以互相交流 并交易。 </li></ul><ol><li>品牌形象的营造 突显品牌的价值与差異，努力提升品牌形象，并提高客户信赖度及消 费者认同感。积极配合上下游厂商，建立良好互动关系，以掌握稳定的供货及销售网络，藉由供货商提供之良好服务及产品，维护公司之 良好商誉。 </li><li>消费者导向策略 计划根据既有的营运成功经验，以消费者导向为主要营销策略，提供 更多样、更完整、更便宜、各方便的网络购物环境，并持续推动与其他产业之合作计划，寻求同业或異业之策略联盟；网络购物流程则兼顾交易安全化及交易接口简单化。长期而言，持续加强消费者导向， 贴近网络消费者习性需求，推出符合消费者期望之产品或服务。 </li><li>差異化营销手法 依消费者族群偏好为依据，客户的需求为导向，了解客户的年龄结构、 7 消费趋向及消费习惯，并以有效的方式达到广告与宣传效果，藉由将市场切割为愈小的区块，愈能为消费者提供愈优质的服务与产品。 </li><li>任务编组快速响应 将入口网站与在线购物之业务、研发及客服人员，按照产品别进行任 务编组，以更完善的服务质量，增加产品的附加价值，并更快速响应 消费者或客户的问题。<br><img src="https://github.com/FrannieYi/Blogimage/blob/master/PChome%E7%BD%91%E7%AB%99%E7%BB%93%E6%9E%84.png?raw=true" alt="pchome网站结构"></li></ol><p><strong>PChome网站结构</strong></p><h2 id="六、面对的挑战和潜在问题"><a href="#六、面对的挑战和潜在问题" class="headerlink" title="六、面对的挑战和潜在问题"></a>六、面对的挑战和潜在问题</h2><blockquote><p>在现今网络无国界的环境下，PChome 虽然已是台湾第一大甩卖网站，但依旧还是需要不断的更新技术，增加新的产品服务，来锁住消费者的心。而拍卖网站除了商品的多元化来吸引消费者浏览外，最重要的还是『交易的安全』，当交易程序繁琐、厂商不实交易或是个人隐私信息外泄，这些在在都显示，要经营拍卖网站，必顸有强大又安全的信息技术、多元化商品与优惠营销服务…… 等。</p></blockquote><h3 id="面对的挑战"><a href="#面对的挑战" class="headerlink" title="面对的挑战"></a>面对的挑战</h3><ol><li>竞争程度高，必须要与各大甩卖网站竞争。</li><li>营销通路，商品运送成本分摊，满足消费者需求。</li><li>都属于交易平台，服务性质也相似。</li><li>有哪些优惠营销、信息取得和商品的价钱，能够吸引大众使用。</li><li>如何将此品牌知名度扩展开来等等。</li></ol><h3 id="潜在问题"><a href="#潜在问题" class="headerlink" title="潜在问题"></a>潜在问题</h3><blockquote><p>面对一场新的金融革命，互联网金融蓬勃发展，其中就包含第三方支付。台湾目前提供第三方支付平台业者有『PChomeOnline的支付连』、欧13买尬转投资的欧付宝以及红阳、绿界与蓝新科技等，藉由「第三方支付」平台，买方可利用该平台提供的帐户进支付交易款项，经第三方支付平台通知卖家货款入账、并要求发货，最后买方签收货物后，第三方就可款项转账至卖家账户。现阶段只有Yahoo!奇摩的购物中心、PChome网络家庭等交易规模较大业者，较容易与收单银行洽谈刷卡业务，而其小规模网拍卖家，或是个人对个人的网络交易，仍无法提供信用卡交易服务，多半依赖转账交易，交易风险较大。</p></blockquote><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><ol><li>互联网技术过于庞大：银行是行政性垄断，互联网是技术性垄断，互联网金融为二者的 结合，其垄断性更强。</li><li>互联网存在着另一种信息不对称问题：因为没有实际规范数据的真实性，其所使用的大数据、云计算、平台、移动金融等四大环结都没有实名制，亦即其所使用之信息缺少确实的依据，因此，其所引发的信息不对称所引发的问题可能更大。</li><li>在线与线下缺少一致性：一般而言，在线考虑的是违约率，线下考虑的是违约率与损失率，二者缺少一致性的规范，故其风险判断亦不同。</li><li>反洗钱问题在现行金融管制体系中，线下对洗钱问题有一定的管制模式，唯在线由于资金没有记号，都是数字所构成，很难加以 控管。</li></ol><h4 id="互联网金融的缺点"><a href="#互联网金融的缺点" class="headerlink" title="互联网金融的缺点"></a>互联网金融的缺点</h4><ol><li>互联网金融犯罪难以预防：除了遇到与其他国家相同的网络犯罪和计算机病毒外，其他如电子 商务、互联网应用、有关软硬件知识等，其对目前已经建立的支付制度等出现后所涉及的责任认定、承担、仲裁结果的执行等， 其复杂的法律关系现在仍难以解决。</li><li>普及不易：网络技术日新月異，使用模式经常更新，并非人人可以使用，普及相对困难。</li><li>风险管理必须加强：网络的真实性难测，也难以有效控管，政府的风险管理尚不成熟。</li><li>尚未建立有效的监督制度:信息科技日新月異，新技术所引发的舞弊问题层出不穷，而监督 制度尚未形成独立系统。</li></ol><h2 id="七、五力分析"><a href="#七、五力分析" class="headerlink" title="七、五力分析"></a>七、五力分析</h2><h3 id="1-现有竞争者"><a href="#1-现有竞争者" class="headerlink" title="1. 现有竞争者"></a>1. 现有竞争者</h3><ul><li>竞争对手多，例如：Amazon 是最大网络零售商，起初由网络书店进入市场，目前产品项目包括书籍、影音产品、消费性电子产品、玩具、 家庭用品等。Yahoo 则是最大的入口网站。同样是拍卖厂商，在市场 中拥有多个厂商，所以竞争程度提高许多，例如：E-BAY、 PAYEASY……等。</li></ul><h3 id="2-潜在竞争者的威胁"><a href="#2-潜在竞争者的威胁" class="headerlink" title="2. 潜在竞争者的威胁"></a>2. 潜在竞争者的威胁</h3><ul><li>影响进入障碍的原因包括规模经济、产品差異化、资本需求、移转成本、绝对成本优势、范畴经济、营销不对称等，新进厂商的进入障碍 是属于高的。</li></ul><h3 id="3-顾客的议价能力"><a href="#3-顾客的议价能力" class="headerlink" title="3. 顾客的议价能力"></a>3. 顾客的议价能力</h3><ul><li>PChome 在实务上透过一些优惠方案来提高使用者的转换成本以增加对于买者的议价能力。</li></ul><h3 id="4-供货商的议价能力"><a href="#4-供货商的议价能力" class="headerlink" title="4. 供货商的议价能力"></a>4. 供货商的议价能力</h3><ul><li>供货商的力量并不大，对于网络拍卖商来说，有绝对不能当机的压力，其选择的供货商必顸具有一定的质量，所以供货商的议价能力也就相 对地降低了。</li></ul><h3 id="5-替代品的威胁"><a href="#5-替代品的威胁" class="headerlink" title="5. 替代品的威胁"></a>5. 替代品的威胁</h3><ul><li>网络拍卖的替代品为传统拍卖，传统的拍卖由于有地域、产品多样性的限制，以及必顸有实体通路成本，再加上买卖双方没有一个便利沟通的管道，因此传统拍卖对于网络拍卖的威胁并不大。网络无国界，因此消费者要更换网络拍卖网站并不难，甚至在其他国家也可以在线购买物品，因此其他拍卖网站的威胁也就大大的增加。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本次分析主要从PChome网络家庭的经营现状，营销策略，网站特色和结构，面临的挑战，潜在的问题和五力等方面分析。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="电子商务" scheme="http://yangkunyi.com/tags/%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1/"/>
    
      <category term="网站分析" scheme="http://yangkunyi.com/tags/%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>深层理解GET与POST</title>
    <link href="http://yangkunyi.com/2018/01/09/%E6%B7%B1%E5%B1%82%E7%90%86%E8%A7%A3GET%E4%B8%8EPOST/"/>
    <id>http://yangkunyi.com/2018/01/09/深层理解GET与POST/</id>
    <published>2018-01-09T06:00:39.000Z</published>
    <updated>2018-01-09T06:02:33.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>推荐文章中，再次理解了GET与POST。</p></blockquote><a id="more"></a><p>GET与POST是HTTP请求的两种方式，每次谈到，不免都是想说这两者的区别嘛，之前自己也只是模糊的知道POST方法好一点，为什么，自己也只能回答一句，安全一点嘛，觉得说得太少了，于是去搜索了一下，以下是w3schools给出的答案：</p><ul><li>GET在浏览器回退时是无害的，而POST会再次提交请求。</li><li>GET产生的URL地址可以被Bookmark，而POST不可以。</li><li>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li>GET请求在URL中传送的参数是有长度限制的，而POST么有。</li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</li><li>GET参数通过URL传递，POST放在Request body中。</li></ul><p>说得真是有道理，没错啊，这就是区别啊，但是这样的答案大家背一背什么的就都会说了，但是这就完了吗？以上的自己都能理解，但是我觉得都只是现象，并不是原因啊！于是继续懵逼，直到看到下面的解释，自己好像慢慢开始理解了。</p><p>原文链接<a href="https://mp.weixin.qq.com/s?__biz=MzI3NzIzMzg3Mw==&amp;mid=100000054&amp;idx=1&amp;sn=71f6c214f3833d9ca20b9f7dcd9d33e4" target="_blank" rel="external">99%的人都理解错了GET与POST</a></p><p>既然说GET与POST是HTTP请求的两种方式，那什么是HTTP？</p><p>学过一点计算机网络的我有点印象，但是也不记得官方咋说的了，于是借鉴一下别人的话：</p><blockquote><p>HTTP是基于TCP/IP的关于数据如何在万维网中如何通信的协议。</p></blockquote><p>那既然HTTP的底层是TCP/IP，GET与POST自然也是基于TCP/IP咯，那GET与POST就是TCP/IP的两种链接方式了，那它们的区别到底在哪里呢？</p><p>借助原文的比喻：</p><blockquote><p>在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱，送急件的汽车可能被前面满载货物的汽车拦堵在路上，整个交通系统一定会瘫痪。为了避免这种情况发生，交通规则HTTP诞生了。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。</p></blockquote><p>既然只是对传输数据的方式有要求，那关于参数的大小要求又从哪里来的？</p><p>这就是“运输公司”——浏览器和服务器不同导致的，业界不成文的规定是，（大多数）浏览器通常都会限制url长度在2K个字节，而（大多数）服务器最多处理64K大小的url。如果你用GET服务，在request body偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带request body，也不能保证一定能被接收到。</p><p>现在，我知道了，GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。这个时候我觉得标准答案的现象我都可以解释了。</p><p>紧接着，我又看到了一个令我目瞪口呆的区别：</p><blockquote><p>简单的说：<br><strong>GET产生一个TCP数据包；POST产生两个TCP数据包。</strong></p></blockquote><p>这是什么情况，我难道睡觉的时候老师讲重点了！！！？？？反正就是现在才知道这么重要的知识点。</p><p>好吧，了解之后明白了，GET在请求的时候会一次性将header和data发出去，然后服务器响应200（返回数据）；而POST会先发header，等到服务器响应100（continue）的时候再发送data，然后服务器返回200（返回数据）。</p><p>POST两次发送骤导致时间上消耗要多一点，那GET看起来就更有效了，于是Yahoo团队推荐将所有的POST请求用GET请求替换，以此来优化网页性能，无可厚非这可以达到一定效果，但很明显也是一个坑啊！</p><p>为什么？</p><ul><li>存在即合理啊！（GET与POST都有自己的语义，不能随便混用。）</li><li>网速够快这点时间可以忽略（据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。），而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。</li><li>并不是所有“运输公司”（浏览器）都会在POST中发送两次包，Firefox就只发送一次。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;推荐文章中，再次理解了GET与POST。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yangkunyi.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="web" scheme="http://yangkunyi.com/tags/web/"/>
    
      <category term="GET" scheme="http://yangkunyi.com/tags/GET/"/>
    
      <category term="POST" scheme="http://yangkunyi.com/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>WeeklyMind-7</title>
    <link href="http://yangkunyi.com/2018/01/07/WeeklyMind-7/"/>
    <id>http://yangkunyi.com/2018/01/07/WeeklyMind-7/</id>
    <published>2018-01-07T15:39:16.000Z</published>
    <updated>2018-01-07T15:48:06.430Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>期末周真的很崩溃，赶各种报告，还要复习，命天要考不动产管理和西方哲学史，不动产管理自己都快要放弃了，今天下午又整理出二十页pdf的知识点，也是选择随缘了，反正这个周就是很忙碌就对了，为了复习自己周末都去图书馆了，真是不敢相信！！！</p></blockquote><a id="more"></a><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ul><li>web网页程序设计已经结课了，这个对有基础的自己来说，不难，也没有担心什么，成绩也在自己的规划之中。</li><li>行销管理的报告初步形态也基本完成，明天早起去把名片打印出来就行了。</li><li>再来是明天要考试的两门，脑子已经不够用了！</li><li>周三的财务管理也算复习了三个单元了，但还是不算有底，主要是有一个数据不会算！！！这个问题要在明天和后天晚上的时间里面解决了。</li><li>最后周四还有一门课堂的期末报告，不过时间还够，所以不用太担心。</li><li>还有就是自己的博客有改一些个性化设置，更新了主题。</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li>明明前两天都还是清空万里，到考试就大雨滂沱，自己不太喜欢雨天，所以有点点影响心情吧。</li><li>这个周都睡得比较晚，生物钟感觉都已经变了，不过自己也能接受。</li><li>其实就是很普通的一个周，所以自己也想不起太多想写的东西。</li></ul><h2 id="待更进事项"><a href="#待更进事项" class="headerlink" title="待更进事项"></a>待更进事项</h2><ul><li>走之前给自己写一封信</li><li>走之前给家里写一封信</li><li>思想报告</li><li>期末报告</li><li>联系老师商量考试安排</li></ul><blockquote><p>今天雨，可是我们在一起</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;期末周真的很崩溃，赶各种报告，还要复习，命天要考不动产管理和西方哲学史，不动产管理自己都快要放弃了，今天下午又整理出二十页pdf的知识点，也是选择随缘了，反正这个周就是很忙碌就对了，为了复习自己周末都去图书馆了，真是不敢相信！！！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="周记" scheme="http://yangkunyi.com/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
</feed>
